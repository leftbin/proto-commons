// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: leftbin/commons/proto/v1/kafka/model.proto

package com.leftbin.commons.proto.v1.kafka;

/**
 * <pre>
 * this is used to get meta information of kafka streams pod based on key
 * </pre>
 *
 * Protobuf type {@code leftbin.commons.proto.v1.kafka.KeyQueryMeta}
 */
public final class KeyQueryMeta extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:leftbin.commons.proto.v1.kafka.KeyQueryMeta)
    KeyQueryMetaOrBuilder {
private static final long serialVersionUID = 0L;
  // Use KeyQueryMeta.newBuilder() to construct.
  private KeyQueryMeta(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private KeyQueryMeta() {
    standbyHosts_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new KeyQueryMeta();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.leftbin.commons.proto.v1.kafka.ModelProto.internal_static_leftbin_commons_proto_v1_kafka_KeyQueryMeta_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.leftbin.commons.proto.v1.kafka.ModelProto.internal_static_leftbin_commons_proto_v1_kafka_KeyQueryMeta_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.leftbin.commons.proto.v1.kafka.KeyQueryMeta.class, com.leftbin.commons.proto.v1.kafka.KeyQueryMeta.Builder.class);
  }

  public static final int HOST_INFO_FIELD_NUMBER = 1;
  private com.leftbin.commons.proto.v1.kafka.HostInfo hostInfo_;
  /**
   * <code>.leftbin.commons.proto.v1.kafka.HostInfo host_info = 1 [json_name = "hostInfo"];</code>
   * @return Whether the hostInfo field is set.
   */
  @java.lang.Override
  public boolean hasHostInfo() {
    return hostInfo_ != null;
  }
  /**
   * <code>.leftbin.commons.proto.v1.kafka.HostInfo host_info = 1 [json_name = "hostInfo"];</code>
   * @return The hostInfo.
   */
  @java.lang.Override
  public com.leftbin.commons.proto.v1.kafka.HostInfo getHostInfo() {
    return hostInfo_ == null ? com.leftbin.commons.proto.v1.kafka.HostInfo.getDefaultInstance() : hostInfo_;
  }
  /**
   * <code>.leftbin.commons.proto.v1.kafka.HostInfo host_info = 1 [json_name = "hostInfo"];</code>
   */
  @java.lang.Override
  public com.leftbin.commons.proto.v1.kafka.HostInfoOrBuilder getHostInfoOrBuilder() {
    return hostInfo_ == null ? com.leftbin.commons.proto.v1.kafka.HostInfo.getDefaultInstance() : hostInfo_;
  }

  public static final int STANDBY_HOSTS_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private java.util.List<com.leftbin.commons.proto.v1.kafka.HostInfo> standbyHosts_;
  /**
   * <code>repeated .leftbin.commons.proto.v1.kafka.HostInfo standby_hosts = 2 [json_name = "standbyHosts"];</code>
   */
  @java.lang.Override
  public java.util.List<com.leftbin.commons.proto.v1.kafka.HostInfo> getStandbyHostsList() {
    return standbyHosts_;
  }
  /**
   * <code>repeated .leftbin.commons.proto.v1.kafka.HostInfo standby_hosts = 2 [json_name = "standbyHosts"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.leftbin.commons.proto.v1.kafka.HostInfoOrBuilder> 
      getStandbyHostsOrBuilderList() {
    return standbyHosts_;
  }
  /**
   * <code>repeated .leftbin.commons.proto.v1.kafka.HostInfo standby_hosts = 2 [json_name = "standbyHosts"];</code>
   */
  @java.lang.Override
  public int getStandbyHostsCount() {
    return standbyHosts_.size();
  }
  /**
   * <code>repeated .leftbin.commons.proto.v1.kafka.HostInfo standby_hosts = 2 [json_name = "standbyHosts"];</code>
   */
  @java.lang.Override
  public com.leftbin.commons.proto.v1.kafka.HostInfo getStandbyHosts(int index) {
    return standbyHosts_.get(index);
  }
  /**
   * <code>repeated .leftbin.commons.proto.v1.kafka.HostInfo standby_hosts = 2 [json_name = "standbyHosts"];</code>
   */
  @java.lang.Override
  public com.leftbin.commons.proto.v1.kafka.HostInfoOrBuilder getStandbyHostsOrBuilder(
      int index) {
    return standbyHosts_.get(index);
  }

  public static final int PARTITION_FIELD_NUMBER = 3;
  private int partition_ = 0;
  /**
   * <code>int32 partition = 3 [json_name = "partition"];</code>
   * @return The partition.
   */
  @java.lang.Override
  public int getPartition() {
    return partition_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (hostInfo_ != null) {
      output.writeMessage(1, getHostInfo());
    }
    for (int i = 0; i < standbyHosts_.size(); i++) {
      output.writeMessage(2, standbyHosts_.get(i));
    }
    if (partition_ != 0) {
      output.writeInt32(3, partition_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (hostInfo_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getHostInfo());
    }
    for (int i = 0; i < standbyHosts_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, standbyHosts_.get(i));
    }
    if (partition_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, partition_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.leftbin.commons.proto.v1.kafka.KeyQueryMeta)) {
      return super.equals(obj);
    }
    com.leftbin.commons.proto.v1.kafka.KeyQueryMeta other = (com.leftbin.commons.proto.v1.kafka.KeyQueryMeta) obj;

    if (hasHostInfo() != other.hasHostInfo()) return false;
    if (hasHostInfo()) {
      if (!getHostInfo()
          .equals(other.getHostInfo())) return false;
    }
    if (!getStandbyHostsList()
        .equals(other.getStandbyHostsList())) return false;
    if (getPartition()
        != other.getPartition()) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasHostInfo()) {
      hash = (37 * hash) + HOST_INFO_FIELD_NUMBER;
      hash = (53 * hash) + getHostInfo().hashCode();
    }
    if (getStandbyHostsCount() > 0) {
      hash = (37 * hash) + STANDBY_HOSTS_FIELD_NUMBER;
      hash = (53 * hash) + getStandbyHostsList().hashCode();
    }
    hash = (37 * hash) + PARTITION_FIELD_NUMBER;
    hash = (53 * hash) + getPartition();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.leftbin.commons.proto.v1.kafka.KeyQueryMeta parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.leftbin.commons.proto.v1.kafka.KeyQueryMeta parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.leftbin.commons.proto.v1.kafka.KeyQueryMeta parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.leftbin.commons.proto.v1.kafka.KeyQueryMeta parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.leftbin.commons.proto.v1.kafka.KeyQueryMeta parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.leftbin.commons.proto.v1.kafka.KeyQueryMeta parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.leftbin.commons.proto.v1.kafka.KeyQueryMeta parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.leftbin.commons.proto.v1.kafka.KeyQueryMeta parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.leftbin.commons.proto.v1.kafka.KeyQueryMeta parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.leftbin.commons.proto.v1.kafka.KeyQueryMeta parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.leftbin.commons.proto.v1.kafka.KeyQueryMeta parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.leftbin.commons.proto.v1.kafka.KeyQueryMeta parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.leftbin.commons.proto.v1.kafka.KeyQueryMeta prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * this is used to get meta information of kafka streams pod based on key
   * </pre>
   *
   * Protobuf type {@code leftbin.commons.proto.v1.kafka.KeyQueryMeta}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:leftbin.commons.proto.v1.kafka.KeyQueryMeta)
      com.leftbin.commons.proto.v1.kafka.KeyQueryMetaOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.leftbin.commons.proto.v1.kafka.ModelProto.internal_static_leftbin_commons_proto_v1_kafka_KeyQueryMeta_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.leftbin.commons.proto.v1.kafka.ModelProto.internal_static_leftbin_commons_proto_v1_kafka_KeyQueryMeta_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.leftbin.commons.proto.v1.kafka.KeyQueryMeta.class, com.leftbin.commons.proto.v1.kafka.KeyQueryMeta.Builder.class);
    }

    // Construct using com.leftbin.commons.proto.v1.kafka.KeyQueryMeta.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      hostInfo_ = null;
      if (hostInfoBuilder_ != null) {
        hostInfoBuilder_.dispose();
        hostInfoBuilder_ = null;
      }
      if (standbyHostsBuilder_ == null) {
        standbyHosts_ = java.util.Collections.emptyList();
      } else {
        standbyHosts_ = null;
        standbyHostsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      partition_ = 0;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.leftbin.commons.proto.v1.kafka.ModelProto.internal_static_leftbin_commons_proto_v1_kafka_KeyQueryMeta_descriptor;
    }

    @java.lang.Override
    public com.leftbin.commons.proto.v1.kafka.KeyQueryMeta getDefaultInstanceForType() {
      return com.leftbin.commons.proto.v1.kafka.KeyQueryMeta.getDefaultInstance();
    }

    @java.lang.Override
    public com.leftbin.commons.proto.v1.kafka.KeyQueryMeta build() {
      com.leftbin.commons.proto.v1.kafka.KeyQueryMeta result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.leftbin.commons.proto.v1.kafka.KeyQueryMeta buildPartial() {
      com.leftbin.commons.proto.v1.kafka.KeyQueryMeta result = new com.leftbin.commons.proto.v1.kafka.KeyQueryMeta(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.leftbin.commons.proto.v1.kafka.KeyQueryMeta result) {
      if (standbyHostsBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          standbyHosts_ = java.util.Collections.unmodifiableList(standbyHosts_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.standbyHosts_ = standbyHosts_;
      } else {
        result.standbyHosts_ = standbyHostsBuilder_.build();
      }
    }

    private void buildPartial0(com.leftbin.commons.proto.v1.kafka.KeyQueryMeta result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.hostInfo_ = hostInfoBuilder_ == null
            ? hostInfo_
            : hostInfoBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.partition_ = partition_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.leftbin.commons.proto.v1.kafka.KeyQueryMeta) {
        return mergeFrom((com.leftbin.commons.proto.v1.kafka.KeyQueryMeta)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.leftbin.commons.proto.v1.kafka.KeyQueryMeta other) {
      if (other == com.leftbin.commons.proto.v1.kafka.KeyQueryMeta.getDefaultInstance()) return this;
      if (other.hasHostInfo()) {
        mergeHostInfo(other.getHostInfo());
      }
      if (standbyHostsBuilder_ == null) {
        if (!other.standbyHosts_.isEmpty()) {
          if (standbyHosts_.isEmpty()) {
            standbyHosts_ = other.standbyHosts_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureStandbyHostsIsMutable();
            standbyHosts_.addAll(other.standbyHosts_);
          }
          onChanged();
        }
      } else {
        if (!other.standbyHosts_.isEmpty()) {
          if (standbyHostsBuilder_.isEmpty()) {
            standbyHostsBuilder_.dispose();
            standbyHostsBuilder_ = null;
            standbyHosts_ = other.standbyHosts_;
            bitField0_ = (bitField0_ & ~0x00000002);
            standbyHostsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getStandbyHostsFieldBuilder() : null;
          } else {
            standbyHostsBuilder_.addAllMessages(other.standbyHosts_);
          }
        }
      }
      if (other.getPartition() != 0) {
        setPartition(other.getPartition());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getHostInfoFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              com.leftbin.commons.proto.v1.kafka.HostInfo m =
                  input.readMessage(
                      com.leftbin.commons.proto.v1.kafka.HostInfo.parser(),
                      extensionRegistry);
              if (standbyHostsBuilder_ == null) {
                ensureStandbyHostsIsMutable();
                standbyHosts_.add(m);
              } else {
                standbyHostsBuilder_.addMessage(m);
              }
              break;
            } // case 18
            case 24: {
              partition_ = input.readInt32();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private com.leftbin.commons.proto.v1.kafka.HostInfo hostInfo_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.leftbin.commons.proto.v1.kafka.HostInfo, com.leftbin.commons.proto.v1.kafka.HostInfo.Builder, com.leftbin.commons.proto.v1.kafka.HostInfoOrBuilder> hostInfoBuilder_;
    /**
     * <code>.leftbin.commons.proto.v1.kafka.HostInfo host_info = 1 [json_name = "hostInfo"];</code>
     * @return Whether the hostInfo field is set.
     */
    public boolean hasHostInfo() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>.leftbin.commons.proto.v1.kafka.HostInfo host_info = 1 [json_name = "hostInfo"];</code>
     * @return The hostInfo.
     */
    public com.leftbin.commons.proto.v1.kafka.HostInfo getHostInfo() {
      if (hostInfoBuilder_ == null) {
        return hostInfo_ == null ? com.leftbin.commons.proto.v1.kafka.HostInfo.getDefaultInstance() : hostInfo_;
      } else {
        return hostInfoBuilder_.getMessage();
      }
    }
    /**
     * <code>.leftbin.commons.proto.v1.kafka.HostInfo host_info = 1 [json_name = "hostInfo"];</code>
     */
    public Builder setHostInfo(com.leftbin.commons.proto.v1.kafka.HostInfo value) {
      if (hostInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        hostInfo_ = value;
      } else {
        hostInfoBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>.leftbin.commons.proto.v1.kafka.HostInfo host_info = 1 [json_name = "hostInfo"];</code>
     */
    public Builder setHostInfo(
        com.leftbin.commons.proto.v1.kafka.HostInfo.Builder builderForValue) {
      if (hostInfoBuilder_ == null) {
        hostInfo_ = builderForValue.build();
      } else {
        hostInfoBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>.leftbin.commons.proto.v1.kafka.HostInfo host_info = 1 [json_name = "hostInfo"];</code>
     */
    public Builder mergeHostInfo(com.leftbin.commons.proto.v1.kafka.HostInfo value) {
      if (hostInfoBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          hostInfo_ != null &&
          hostInfo_ != com.leftbin.commons.proto.v1.kafka.HostInfo.getDefaultInstance()) {
          getHostInfoBuilder().mergeFrom(value);
        } else {
          hostInfo_ = value;
        }
      } else {
        hostInfoBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>.leftbin.commons.proto.v1.kafka.HostInfo host_info = 1 [json_name = "hostInfo"];</code>
     */
    public Builder clearHostInfo() {
      bitField0_ = (bitField0_ & ~0x00000001);
      hostInfo_ = null;
      if (hostInfoBuilder_ != null) {
        hostInfoBuilder_.dispose();
        hostInfoBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <code>.leftbin.commons.proto.v1.kafka.HostInfo host_info = 1 [json_name = "hostInfo"];</code>
     */
    public com.leftbin.commons.proto.v1.kafka.HostInfo.Builder getHostInfoBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getHostInfoFieldBuilder().getBuilder();
    }
    /**
     * <code>.leftbin.commons.proto.v1.kafka.HostInfo host_info = 1 [json_name = "hostInfo"];</code>
     */
    public com.leftbin.commons.proto.v1.kafka.HostInfoOrBuilder getHostInfoOrBuilder() {
      if (hostInfoBuilder_ != null) {
        return hostInfoBuilder_.getMessageOrBuilder();
      } else {
        return hostInfo_ == null ?
            com.leftbin.commons.proto.v1.kafka.HostInfo.getDefaultInstance() : hostInfo_;
      }
    }
    /**
     * <code>.leftbin.commons.proto.v1.kafka.HostInfo host_info = 1 [json_name = "hostInfo"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.leftbin.commons.proto.v1.kafka.HostInfo, com.leftbin.commons.proto.v1.kafka.HostInfo.Builder, com.leftbin.commons.proto.v1.kafka.HostInfoOrBuilder> 
        getHostInfoFieldBuilder() {
      if (hostInfoBuilder_ == null) {
        hostInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.leftbin.commons.proto.v1.kafka.HostInfo, com.leftbin.commons.proto.v1.kafka.HostInfo.Builder, com.leftbin.commons.proto.v1.kafka.HostInfoOrBuilder>(
                getHostInfo(),
                getParentForChildren(),
                isClean());
        hostInfo_ = null;
      }
      return hostInfoBuilder_;
    }

    private java.util.List<com.leftbin.commons.proto.v1.kafka.HostInfo> standbyHosts_ =
      java.util.Collections.emptyList();
    private void ensureStandbyHostsIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        standbyHosts_ = new java.util.ArrayList<com.leftbin.commons.proto.v1.kafka.HostInfo>(standbyHosts_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.leftbin.commons.proto.v1.kafka.HostInfo, com.leftbin.commons.proto.v1.kafka.HostInfo.Builder, com.leftbin.commons.proto.v1.kafka.HostInfoOrBuilder> standbyHostsBuilder_;

    /**
     * <code>repeated .leftbin.commons.proto.v1.kafka.HostInfo standby_hosts = 2 [json_name = "standbyHosts"];</code>
     */
    public java.util.List<com.leftbin.commons.proto.v1.kafka.HostInfo> getStandbyHostsList() {
      if (standbyHostsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(standbyHosts_);
      } else {
        return standbyHostsBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .leftbin.commons.proto.v1.kafka.HostInfo standby_hosts = 2 [json_name = "standbyHosts"];</code>
     */
    public int getStandbyHostsCount() {
      if (standbyHostsBuilder_ == null) {
        return standbyHosts_.size();
      } else {
        return standbyHostsBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .leftbin.commons.proto.v1.kafka.HostInfo standby_hosts = 2 [json_name = "standbyHosts"];</code>
     */
    public com.leftbin.commons.proto.v1.kafka.HostInfo getStandbyHosts(int index) {
      if (standbyHostsBuilder_ == null) {
        return standbyHosts_.get(index);
      } else {
        return standbyHostsBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .leftbin.commons.proto.v1.kafka.HostInfo standby_hosts = 2 [json_name = "standbyHosts"];</code>
     */
    public Builder setStandbyHosts(
        int index, com.leftbin.commons.proto.v1.kafka.HostInfo value) {
      if (standbyHostsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureStandbyHostsIsMutable();
        standbyHosts_.set(index, value);
        onChanged();
      } else {
        standbyHostsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .leftbin.commons.proto.v1.kafka.HostInfo standby_hosts = 2 [json_name = "standbyHosts"];</code>
     */
    public Builder setStandbyHosts(
        int index, com.leftbin.commons.proto.v1.kafka.HostInfo.Builder builderForValue) {
      if (standbyHostsBuilder_ == null) {
        ensureStandbyHostsIsMutable();
        standbyHosts_.set(index, builderForValue.build());
        onChanged();
      } else {
        standbyHostsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .leftbin.commons.proto.v1.kafka.HostInfo standby_hosts = 2 [json_name = "standbyHosts"];</code>
     */
    public Builder addStandbyHosts(com.leftbin.commons.proto.v1.kafka.HostInfo value) {
      if (standbyHostsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureStandbyHostsIsMutable();
        standbyHosts_.add(value);
        onChanged();
      } else {
        standbyHostsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .leftbin.commons.proto.v1.kafka.HostInfo standby_hosts = 2 [json_name = "standbyHosts"];</code>
     */
    public Builder addStandbyHosts(
        int index, com.leftbin.commons.proto.v1.kafka.HostInfo value) {
      if (standbyHostsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureStandbyHostsIsMutable();
        standbyHosts_.add(index, value);
        onChanged();
      } else {
        standbyHostsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .leftbin.commons.proto.v1.kafka.HostInfo standby_hosts = 2 [json_name = "standbyHosts"];</code>
     */
    public Builder addStandbyHosts(
        com.leftbin.commons.proto.v1.kafka.HostInfo.Builder builderForValue) {
      if (standbyHostsBuilder_ == null) {
        ensureStandbyHostsIsMutable();
        standbyHosts_.add(builderForValue.build());
        onChanged();
      } else {
        standbyHostsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .leftbin.commons.proto.v1.kafka.HostInfo standby_hosts = 2 [json_name = "standbyHosts"];</code>
     */
    public Builder addStandbyHosts(
        int index, com.leftbin.commons.proto.v1.kafka.HostInfo.Builder builderForValue) {
      if (standbyHostsBuilder_ == null) {
        ensureStandbyHostsIsMutable();
        standbyHosts_.add(index, builderForValue.build());
        onChanged();
      } else {
        standbyHostsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .leftbin.commons.proto.v1.kafka.HostInfo standby_hosts = 2 [json_name = "standbyHosts"];</code>
     */
    public Builder addAllStandbyHosts(
        java.lang.Iterable<? extends com.leftbin.commons.proto.v1.kafka.HostInfo> values) {
      if (standbyHostsBuilder_ == null) {
        ensureStandbyHostsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, standbyHosts_);
        onChanged();
      } else {
        standbyHostsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .leftbin.commons.proto.v1.kafka.HostInfo standby_hosts = 2 [json_name = "standbyHosts"];</code>
     */
    public Builder clearStandbyHosts() {
      if (standbyHostsBuilder_ == null) {
        standbyHosts_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        standbyHostsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .leftbin.commons.proto.v1.kafka.HostInfo standby_hosts = 2 [json_name = "standbyHosts"];</code>
     */
    public Builder removeStandbyHosts(int index) {
      if (standbyHostsBuilder_ == null) {
        ensureStandbyHostsIsMutable();
        standbyHosts_.remove(index);
        onChanged();
      } else {
        standbyHostsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .leftbin.commons.proto.v1.kafka.HostInfo standby_hosts = 2 [json_name = "standbyHosts"];</code>
     */
    public com.leftbin.commons.proto.v1.kafka.HostInfo.Builder getStandbyHostsBuilder(
        int index) {
      return getStandbyHostsFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .leftbin.commons.proto.v1.kafka.HostInfo standby_hosts = 2 [json_name = "standbyHosts"];</code>
     */
    public com.leftbin.commons.proto.v1.kafka.HostInfoOrBuilder getStandbyHostsOrBuilder(
        int index) {
      if (standbyHostsBuilder_ == null) {
        return standbyHosts_.get(index);  } else {
        return standbyHostsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .leftbin.commons.proto.v1.kafka.HostInfo standby_hosts = 2 [json_name = "standbyHosts"];</code>
     */
    public java.util.List<? extends com.leftbin.commons.proto.v1.kafka.HostInfoOrBuilder> 
         getStandbyHostsOrBuilderList() {
      if (standbyHostsBuilder_ != null) {
        return standbyHostsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(standbyHosts_);
      }
    }
    /**
     * <code>repeated .leftbin.commons.proto.v1.kafka.HostInfo standby_hosts = 2 [json_name = "standbyHosts"];</code>
     */
    public com.leftbin.commons.proto.v1.kafka.HostInfo.Builder addStandbyHostsBuilder() {
      return getStandbyHostsFieldBuilder().addBuilder(
          com.leftbin.commons.proto.v1.kafka.HostInfo.getDefaultInstance());
    }
    /**
     * <code>repeated .leftbin.commons.proto.v1.kafka.HostInfo standby_hosts = 2 [json_name = "standbyHosts"];</code>
     */
    public com.leftbin.commons.proto.v1.kafka.HostInfo.Builder addStandbyHostsBuilder(
        int index) {
      return getStandbyHostsFieldBuilder().addBuilder(
          index, com.leftbin.commons.proto.v1.kafka.HostInfo.getDefaultInstance());
    }
    /**
     * <code>repeated .leftbin.commons.proto.v1.kafka.HostInfo standby_hosts = 2 [json_name = "standbyHosts"];</code>
     */
    public java.util.List<com.leftbin.commons.proto.v1.kafka.HostInfo.Builder> 
         getStandbyHostsBuilderList() {
      return getStandbyHostsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.leftbin.commons.proto.v1.kafka.HostInfo, com.leftbin.commons.proto.v1.kafka.HostInfo.Builder, com.leftbin.commons.proto.v1.kafka.HostInfoOrBuilder> 
        getStandbyHostsFieldBuilder() {
      if (standbyHostsBuilder_ == null) {
        standbyHostsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.leftbin.commons.proto.v1.kafka.HostInfo, com.leftbin.commons.proto.v1.kafka.HostInfo.Builder, com.leftbin.commons.proto.v1.kafka.HostInfoOrBuilder>(
                standbyHosts_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        standbyHosts_ = null;
      }
      return standbyHostsBuilder_;
    }

    private int partition_ ;
    /**
     * <code>int32 partition = 3 [json_name = "partition"];</code>
     * @return The partition.
     */
    @java.lang.Override
    public int getPartition() {
      return partition_;
    }
    /**
     * <code>int32 partition = 3 [json_name = "partition"];</code>
     * @param value The partition to set.
     * @return This builder for chaining.
     */
    public Builder setPartition(int value) {

      partition_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>int32 partition = 3 [json_name = "partition"];</code>
     * @return This builder for chaining.
     */
    public Builder clearPartition() {
      bitField0_ = (bitField0_ & ~0x00000004);
      partition_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:leftbin.commons.proto.v1.kafka.KeyQueryMeta)
  }

  // @@protoc_insertion_point(class_scope:leftbin.commons.proto.v1.kafka.KeyQueryMeta)
  private static final com.leftbin.commons.proto.v1.kafka.KeyQueryMeta DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.leftbin.commons.proto.v1.kafka.KeyQueryMeta();
  }

  public static com.leftbin.commons.proto.v1.kafka.KeyQueryMeta getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<KeyQueryMeta>
      PARSER = new com.google.protobuf.AbstractParser<KeyQueryMeta>() {
    @java.lang.Override
    public KeyQueryMeta parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<KeyQueryMeta> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<KeyQueryMeta> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.leftbin.commons.proto.v1.kafka.KeyQueryMeta getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

