// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: leftbin/commons/proto/v1/english/rpc/enums/enums.proto

package com.leftbin.commons.proto.v1.english.rpc.enums;

/**
 * <pre>
 * english acronym enums added to avoid typing mistakes for the commonly used acronyms for naming things
 * this enum is encapsulated inside a message as a few entries like "name" (a reserved word in few languages) can only be added to the enum if it is inside a message.
 * the recommended best practice to prefix the entry with enum name has been intentionally ignored to as the values of the entries are intended to be used to name resources.
 * </pre>
 *
 * Protobuf type {@code leftbin.commons.proto.v1.english.rpc.enums.Acronym}
 */
public final class Acronym extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:leftbin.commons.proto.v1.english.rpc.enums.Acronym)
    AcronymOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Acronym.newBuilder() to construct.
  private Acronym(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Acronym() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Acronym();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.leftbin.commons.proto.v1.english.rpc.enums.EnumsProto.internal_static_leftbin_commons_proto_v1_english_rpc_enums_Acronym_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.leftbin.commons.proto.v1.english.rpc.enums.EnumsProto.internal_static_leftbin_commons_proto_v1_english_rpc_enums_Acronym_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.leftbin.commons.proto.v1.english.rpc.enums.Acronym.class, com.leftbin.commons.proto.v1.english.rpc.enums.Acronym.Builder.class);
  }

  /**
   * Protobuf enum {@code leftbin.commons.proto.v1.english.rpc.enums.Acronym.AcronymEnum}
   */
  public enum AcronymEnum
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ACRONYM_UNSPECIFIED = 0;</code>
     */
    ACRONYM_UNSPECIFIED(0),
    /**
     * <pre>
     * network
     * </pre>
     *
     * <code>NW = 1;</code>
     */
    NW(1),
    /**
     * <pre>
     * rpc
     * </pre>
     *
     * <code>RPC = 2;</code>
     */
    RPC(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>ACRONYM_UNSPECIFIED = 0;</code>
     */
    public static final int ACRONYM_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * network
     * </pre>
     *
     * <code>NW = 1;</code>
     */
    public static final int NW_VALUE = 1;
    /**
     * <pre>
     * rpc
     * </pre>
     *
     * <code>RPC = 2;</code>
     */
    public static final int RPC_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static AcronymEnum valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static AcronymEnum forNumber(int value) {
      switch (value) {
        case 0: return ACRONYM_UNSPECIFIED;
        case 1: return NW;
        case 2: return RPC;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AcronymEnum>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        AcronymEnum> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AcronymEnum>() {
            public AcronymEnum findValueByNumber(int number) {
              return AcronymEnum.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.leftbin.commons.proto.v1.english.rpc.enums.Acronym.getDescriptor().getEnumTypes().get(0);
    }

    private static final AcronymEnum[] VALUES = values();

    public static AcronymEnum valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private AcronymEnum(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:leftbin.commons.proto.v1.english.rpc.enums.Acronym.AcronymEnum)
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.leftbin.commons.proto.v1.english.rpc.enums.Acronym)) {
      return super.equals(obj);
    }
    com.leftbin.commons.proto.v1.english.rpc.enums.Acronym other = (com.leftbin.commons.proto.v1.english.rpc.enums.Acronym) obj;

    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.leftbin.commons.proto.v1.english.rpc.enums.Acronym parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.leftbin.commons.proto.v1.english.rpc.enums.Acronym parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.leftbin.commons.proto.v1.english.rpc.enums.Acronym parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.leftbin.commons.proto.v1.english.rpc.enums.Acronym parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.leftbin.commons.proto.v1.english.rpc.enums.Acronym parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.leftbin.commons.proto.v1.english.rpc.enums.Acronym parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.leftbin.commons.proto.v1.english.rpc.enums.Acronym parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.leftbin.commons.proto.v1.english.rpc.enums.Acronym parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.leftbin.commons.proto.v1.english.rpc.enums.Acronym parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.leftbin.commons.proto.v1.english.rpc.enums.Acronym parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.leftbin.commons.proto.v1.english.rpc.enums.Acronym parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.leftbin.commons.proto.v1.english.rpc.enums.Acronym parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.leftbin.commons.proto.v1.english.rpc.enums.Acronym prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * english acronym enums added to avoid typing mistakes for the commonly used acronyms for naming things
   * this enum is encapsulated inside a message as a few entries like "name" (a reserved word in few languages) can only be added to the enum if it is inside a message.
   * the recommended best practice to prefix the entry with enum name has been intentionally ignored to as the values of the entries are intended to be used to name resources.
   * </pre>
   *
   * Protobuf type {@code leftbin.commons.proto.v1.english.rpc.enums.Acronym}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:leftbin.commons.proto.v1.english.rpc.enums.Acronym)
      com.leftbin.commons.proto.v1.english.rpc.enums.AcronymOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.leftbin.commons.proto.v1.english.rpc.enums.EnumsProto.internal_static_leftbin_commons_proto_v1_english_rpc_enums_Acronym_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.leftbin.commons.proto.v1.english.rpc.enums.EnumsProto.internal_static_leftbin_commons_proto_v1_english_rpc_enums_Acronym_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.leftbin.commons.proto.v1.english.rpc.enums.Acronym.class, com.leftbin.commons.proto.v1.english.rpc.enums.Acronym.Builder.class);
    }

    // Construct using com.leftbin.commons.proto.v1.english.rpc.enums.Acronym.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.leftbin.commons.proto.v1.english.rpc.enums.EnumsProto.internal_static_leftbin_commons_proto_v1_english_rpc_enums_Acronym_descriptor;
    }

    @java.lang.Override
    public com.leftbin.commons.proto.v1.english.rpc.enums.Acronym getDefaultInstanceForType() {
      return com.leftbin.commons.proto.v1.english.rpc.enums.Acronym.getDefaultInstance();
    }

    @java.lang.Override
    public com.leftbin.commons.proto.v1.english.rpc.enums.Acronym build() {
      com.leftbin.commons.proto.v1.english.rpc.enums.Acronym result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.leftbin.commons.proto.v1.english.rpc.enums.Acronym buildPartial() {
      com.leftbin.commons.proto.v1.english.rpc.enums.Acronym result = new com.leftbin.commons.proto.v1.english.rpc.enums.Acronym(this);
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.leftbin.commons.proto.v1.english.rpc.enums.Acronym) {
        return mergeFrom((com.leftbin.commons.proto.v1.english.rpc.enums.Acronym)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.leftbin.commons.proto.v1.english.rpc.enums.Acronym other) {
      if (other == com.leftbin.commons.proto.v1.english.rpc.enums.Acronym.getDefaultInstance()) return this;
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:leftbin.commons.proto.v1.english.rpc.enums.Acronym)
  }

  // @@protoc_insertion_point(class_scope:leftbin.commons.proto.v1.english.rpc.enums.Acronym)
  private static final com.leftbin.commons.proto.v1.english.rpc.enums.Acronym DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.leftbin.commons.proto.v1.english.rpc.enums.Acronym();
  }

  public static com.leftbin.commons.proto.v1.english.rpc.enums.Acronym getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Acronym>
      PARSER = new com.google.protobuf.AbstractParser<Acronym>() {
    @java.lang.Override
    public Acronym parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<Acronym> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Acronym> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.leftbin.commons.proto.v1.english.rpc.enums.Acronym getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

