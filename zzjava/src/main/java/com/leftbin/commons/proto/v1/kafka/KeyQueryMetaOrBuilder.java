// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: leftbin/commons/proto/v1/kafka/model.proto

package com.leftbin.commons.proto.v1.kafka;

public interface KeyQueryMetaOrBuilder extends
    // @@protoc_insertion_point(interface_extends:leftbin.commons.proto.v1.kafka.KeyQueryMeta)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.leftbin.commons.proto.v1.kafka.HostInfo host_info = 1 [json_name = "hostInfo"];</code>
   * @return Whether the hostInfo field is set.
   */
  boolean hasHostInfo();
  /**
   * <code>.leftbin.commons.proto.v1.kafka.HostInfo host_info = 1 [json_name = "hostInfo"];</code>
   * @return The hostInfo.
   */
  com.leftbin.commons.proto.v1.kafka.HostInfo getHostInfo();
  /**
   * <code>.leftbin.commons.proto.v1.kafka.HostInfo host_info = 1 [json_name = "hostInfo"];</code>
   */
  com.leftbin.commons.proto.v1.kafka.HostInfoOrBuilder getHostInfoOrBuilder();

  /**
   * <code>repeated .leftbin.commons.proto.v1.kafka.HostInfo standby_hosts = 2 [json_name = "standbyHosts"];</code>
   */
  java.util.List<com.leftbin.commons.proto.v1.kafka.HostInfo> 
      getStandbyHostsList();
  /**
   * <code>repeated .leftbin.commons.proto.v1.kafka.HostInfo standby_hosts = 2 [json_name = "standbyHosts"];</code>
   */
  com.leftbin.commons.proto.v1.kafka.HostInfo getStandbyHosts(int index);
  /**
   * <code>repeated .leftbin.commons.proto.v1.kafka.HostInfo standby_hosts = 2 [json_name = "standbyHosts"];</code>
   */
  int getStandbyHostsCount();
  /**
   * <code>repeated .leftbin.commons.proto.v1.kafka.HostInfo standby_hosts = 2 [json_name = "standbyHosts"];</code>
   */
  java.util.List<? extends com.leftbin.commons.proto.v1.kafka.HostInfoOrBuilder> 
      getStandbyHostsOrBuilderList();
  /**
   * <code>repeated .leftbin.commons.proto.v1.kafka.HostInfo standby_hosts = 2 [json_name = "standbyHosts"];</code>
   */
  com.leftbin.commons.proto.v1.kafka.HostInfoOrBuilder getStandbyHostsOrBuilder(
      int index);

  /**
   * <code>int32 partition = 3 [json_name = "partition"];</code>
   * @return The partition.
   */
  int getPartition();
}
