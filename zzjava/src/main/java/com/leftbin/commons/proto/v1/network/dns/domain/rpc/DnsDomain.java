// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: leftbin/commons/proto/v1/network/dns/domain/rpc/model.proto

package com.leftbin.commons.proto.v1.network.dns.domain.rpc;

/**
 * Protobuf type {@code leftbin.commons.proto.v1.network.dns.domain.rpc.DnsDomain}
 */
public final class DnsDomain extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:leftbin.commons.proto.v1.network.dns.domain.rpc.DnsDomain)
    DnsDomainOrBuilder {
private static final long serialVersionUID = 0L;
  // Use DnsDomain.newBuilder() to construct.
  private DnsDomain(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private DnsDomain() {
    domainName_ = "";
    visibility_ = 0;
    dnsRecords_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new DnsDomain();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.leftbin.commons.proto.v1.network.dns.domain.rpc.ModelProto.internal_static_leftbin_commons_proto_v1_network_dns_domain_rpc_DnsDomain_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.leftbin.commons.proto.v1.network.dns.domain.rpc.ModelProto.internal_static_leftbin_commons_proto_v1_network_dns_domain_rpc_DnsDomain_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.leftbin.commons.proto.v1.network.dns.domain.rpc.DnsDomain.class, com.leftbin.commons.proto.v1.network.dns.domain.rpc.DnsDomain.Builder.class);
  }

  public static final int DOMAIN_NAME_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object domainName_ = "";
  /**
   * <pre>
   * domain name example.com
   * </pre>
   *
   * <code>string domain_name = 1 [json_name = "domainName"];</code>
   * @return The domainName.
   */
  @java.lang.Override
  public java.lang.String getDomainName() {
    java.lang.Object ref = domainName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      domainName_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * domain name example.com
   * </pre>
   *
   * <code>string domain_name = 1 [json_name = "domainName"];</code>
   * @return The bytes for domainName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getDomainNameBytes() {
    java.lang.Object ref = domainName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      domainName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int VISIBILITY_FIELD_NUMBER = 2;
  private int visibility_ = 0;
  /**
   * <pre>
   * domain visibility. for private visibility internal reserved ips are added to the zone.
   * for publicly visible domains external reserved domains are added to the zone.
   * </pre>
   *
   * <code>.leftbin.commons.proto.v1.network.dns.domain.rpc.enums.DnsDomainVisibility visibility = 2 [json_name = "visibility"];</code>
   * @return The enum numeric value on the wire for visibility.
   */
  @java.lang.Override public int getVisibilityValue() {
    return visibility_;
  }
  /**
   * <pre>
   * domain visibility. for private visibility internal reserved ips are added to the zone.
   * for publicly visible domains external reserved domains are added to the zone.
   * </pre>
   *
   * <code>.leftbin.commons.proto.v1.network.dns.domain.rpc.enums.DnsDomainVisibility visibility = 2 [json_name = "visibility"];</code>
   * @return The visibility.
   */
  @java.lang.Override public com.leftbin.commons.proto.v1.network.dns.domain.rpc.enums.DnsDomainVisibility getVisibility() {
    com.leftbin.commons.proto.v1.network.dns.domain.rpc.enums.DnsDomainVisibility result = com.leftbin.commons.proto.v1.network.dns.domain.rpc.enums.DnsDomainVisibility.forNumber(visibility_);
    return result == null ? com.leftbin.commons.proto.v1.network.dns.domain.rpc.enums.DnsDomainVisibility.UNRECOGNIZED : result;
  }

  public static final int DNS_RECORDS_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private java.util.List<com.leftbin.commons.proto.v1.network.dns.record.rpc.DnsRecord> dnsRecords_;
  /**
   * <pre>
   * dns records to be added to the zone
   * </pre>
   *
   * <code>repeated .leftbin.commons.proto.v1.network.dns.record.rpc.DnsRecord dns_records = 3 [json_name = "dnsRecords"];</code>
   */
  @java.lang.Override
  public java.util.List<com.leftbin.commons.proto.v1.network.dns.record.rpc.DnsRecord> getDnsRecordsList() {
    return dnsRecords_;
  }
  /**
   * <pre>
   * dns records to be added to the zone
   * </pre>
   *
   * <code>repeated .leftbin.commons.proto.v1.network.dns.record.rpc.DnsRecord dns_records = 3 [json_name = "dnsRecords"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.leftbin.commons.proto.v1.network.dns.record.rpc.DnsRecordOrBuilder> 
      getDnsRecordsOrBuilderList() {
    return dnsRecords_;
  }
  /**
   * <pre>
   * dns records to be added to the zone
   * </pre>
   *
   * <code>repeated .leftbin.commons.proto.v1.network.dns.record.rpc.DnsRecord dns_records = 3 [json_name = "dnsRecords"];</code>
   */
  @java.lang.Override
  public int getDnsRecordsCount() {
    return dnsRecords_.size();
  }
  /**
   * <pre>
   * dns records to be added to the zone
   * </pre>
   *
   * <code>repeated .leftbin.commons.proto.v1.network.dns.record.rpc.DnsRecord dns_records = 3 [json_name = "dnsRecords"];</code>
   */
  @java.lang.Override
  public com.leftbin.commons.proto.v1.network.dns.record.rpc.DnsRecord getDnsRecords(int index) {
    return dnsRecords_.get(index);
  }
  /**
   * <pre>
   * dns records to be added to the zone
   * </pre>
   *
   * <code>repeated .leftbin.commons.proto.v1.network.dns.record.rpc.DnsRecord dns_records = 3 [json_name = "dnsRecords"];</code>
   */
  @java.lang.Override
  public com.leftbin.commons.proto.v1.network.dns.record.rpc.DnsRecordOrBuilder getDnsRecordsOrBuilder(
      int index) {
    return dnsRecords_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(domainName_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, domainName_);
    }
    if (visibility_ != com.leftbin.commons.proto.v1.network.dns.domain.rpc.enums.DnsDomainVisibility.DNS_DOMAIN_VISIBILITY_UNSPECIFIED.getNumber()) {
      output.writeEnum(2, visibility_);
    }
    for (int i = 0; i < dnsRecords_.size(); i++) {
      output.writeMessage(3, dnsRecords_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(domainName_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, domainName_);
    }
    if (visibility_ != com.leftbin.commons.proto.v1.network.dns.domain.rpc.enums.DnsDomainVisibility.DNS_DOMAIN_VISIBILITY_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(2, visibility_);
    }
    for (int i = 0; i < dnsRecords_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, dnsRecords_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.leftbin.commons.proto.v1.network.dns.domain.rpc.DnsDomain)) {
      return super.equals(obj);
    }
    com.leftbin.commons.proto.v1.network.dns.domain.rpc.DnsDomain other = (com.leftbin.commons.proto.v1.network.dns.domain.rpc.DnsDomain) obj;

    if (!getDomainName()
        .equals(other.getDomainName())) return false;
    if (visibility_ != other.visibility_) return false;
    if (!getDnsRecordsList()
        .equals(other.getDnsRecordsList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + DOMAIN_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getDomainName().hashCode();
    hash = (37 * hash) + VISIBILITY_FIELD_NUMBER;
    hash = (53 * hash) + visibility_;
    if (getDnsRecordsCount() > 0) {
      hash = (37 * hash) + DNS_RECORDS_FIELD_NUMBER;
      hash = (53 * hash) + getDnsRecordsList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.leftbin.commons.proto.v1.network.dns.domain.rpc.DnsDomain parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.leftbin.commons.proto.v1.network.dns.domain.rpc.DnsDomain parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.leftbin.commons.proto.v1.network.dns.domain.rpc.DnsDomain parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.leftbin.commons.proto.v1.network.dns.domain.rpc.DnsDomain parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.leftbin.commons.proto.v1.network.dns.domain.rpc.DnsDomain parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.leftbin.commons.proto.v1.network.dns.domain.rpc.DnsDomain parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.leftbin.commons.proto.v1.network.dns.domain.rpc.DnsDomain parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.leftbin.commons.proto.v1.network.dns.domain.rpc.DnsDomain parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.leftbin.commons.proto.v1.network.dns.domain.rpc.DnsDomain parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.leftbin.commons.proto.v1.network.dns.domain.rpc.DnsDomain parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.leftbin.commons.proto.v1.network.dns.domain.rpc.DnsDomain parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.leftbin.commons.proto.v1.network.dns.domain.rpc.DnsDomain parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.leftbin.commons.proto.v1.network.dns.domain.rpc.DnsDomain prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code leftbin.commons.proto.v1.network.dns.domain.rpc.DnsDomain}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:leftbin.commons.proto.v1.network.dns.domain.rpc.DnsDomain)
      com.leftbin.commons.proto.v1.network.dns.domain.rpc.DnsDomainOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.leftbin.commons.proto.v1.network.dns.domain.rpc.ModelProto.internal_static_leftbin_commons_proto_v1_network_dns_domain_rpc_DnsDomain_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.leftbin.commons.proto.v1.network.dns.domain.rpc.ModelProto.internal_static_leftbin_commons_proto_v1_network_dns_domain_rpc_DnsDomain_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.leftbin.commons.proto.v1.network.dns.domain.rpc.DnsDomain.class, com.leftbin.commons.proto.v1.network.dns.domain.rpc.DnsDomain.Builder.class);
    }

    // Construct using com.leftbin.commons.proto.v1.network.dns.domain.rpc.DnsDomain.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      domainName_ = "";
      visibility_ = 0;
      if (dnsRecordsBuilder_ == null) {
        dnsRecords_ = java.util.Collections.emptyList();
      } else {
        dnsRecords_ = null;
        dnsRecordsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000004);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.leftbin.commons.proto.v1.network.dns.domain.rpc.ModelProto.internal_static_leftbin_commons_proto_v1_network_dns_domain_rpc_DnsDomain_descriptor;
    }

    @java.lang.Override
    public com.leftbin.commons.proto.v1.network.dns.domain.rpc.DnsDomain getDefaultInstanceForType() {
      return com.leftbin.commons.proto.v1.network.dns.domain.rpc.DnsDomain.getDefaultInstance();
    }

    @java.lang.Override
    public com.leftbin.commons.proto.v1.network.dns.domain.rpc.DnsDomain build() {
      com.leftbin.commons.proto.v1.network.dns.domain.rpc.DnsDomain result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.leftbin.commons.proto.v1.network.dns.domain.rpc.DnsDomain buildPartial() {
      com.leftbin.commons.proto.v1.network.dns.domain.rpc.DnsDomain result = new com.leftbin.commons.proto.v1.network.dns.domain.rpc.DnsDomain(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.leftbin.commons.proto.v1.network.dns.domain.rpc.DnsDomain result) {
      if (dnsRecordsBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          dnsRecords_ = java.util.Collections.unmodifiableList(dnsRecords_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.dnsRecords_ = dnsRecords_;
      } else {
        result.dnsRecords_ = dnsRecordsBuilder_.build();
      }
    }

    private void buildPartial0(com.leftbin.commons.proto.v1.network.dns.domain.rpc.DnsDomain result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.domainName_ = domainName_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.visibility_ = visibility_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.leftbin.commons.proto.v1.network.dns.domain.rpc.DnsDomain) {
        return mergeFrom((com.leftbin.commons.proto.v1.network.dns.domain.rpc.DnsDomain)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.leftbin.commons.proto.v1.network.dns.domain.rpc.DnsDomain other) {
      if (other == com.leftbin.commons.proto.v1.network.dns.domain.rpc.DnsDomain.getDefaultInstance()) return this;
      if (!other.getDomainName().isEmpty()) {
        domainName_ = other.domainName_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (other.visibility_ != 0) {
        setVisibilityValue(other.getVisibilityValue());
      }
      if (dnsRecordsBuilder_ == null) {
        if (!other.dnsRecords_.isEmpty()) {
          if (dnsRecords_.isEmpty()) {
            dnsRecords_ = other.dnsRecords_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureDnsRecordsIsMutable();
            dnsRecords_.addAll(other.dnsRecords_);
          }
          onChanged();
        }
      } else {
        if (!other.dnsRecords_.isEmpty()) {
          if (dnsRecordsBuilder_.isEmpty()) {
            dnsRecordsBuilder_.dispose();
            dnsRecordsBuilder_ = null;
            dnsRecords_ = other.dnsRecords_;
            bitField0_ = (bitField0_ & ~0x00000004);
            dnsRecordsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getDnsRecordsFieldBuilder() : null;
          } else {
            dnsRecordsBuilder_.addAllMessages(other.dnsRecords_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              domainName_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 16: {
              visibility_ = input.readEnum();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 26: {
              com.leftbin.commons.proto.v1.network.dns.record.rpc.DnsRecord m =
                  input.readMessage(
                      com.leftbin.commons.proto.v1.network.dns.record.rpc.DnsRecord.parser(),
                      extensionRegistry);
              if (dnsRecordsBuilder_ == null) {
                ensureDnsRecordsIsMutable();
                dnsRecords_.add(m);
              } else {
                dnsRecordsBuilder_.addMessage(m);
              }
              break;
            } // case 26
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object domainName_ = "";
    /**
     * <pre>
     * domain name example.com
     * </pre>
     *
     * <code>string domain_name = 1 [json_name = "domainName"];</code>
     * @return The domainName.
     */
    public java.lang.String getDomainName() {
      java.lang.Object ref = domainName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        domainName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * domain name example.com
     * </pre>
     *
     * <code>string domain_name = 1 [json_name = "domainName"];</code>
     * @return The bytes for domainName.
     */
    public com.google.protobuf.ByteString
        getDomainNameBytes() {
      java.lang.Object ref = domainName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        domainName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * domain name example.com
     * </pre>
     *
     * <code>string domain_name = 1 [json_name = "domainName"];</code>
     * @param value The domainName to set.
     * @return This builder for chaining.
     */
    public Builder setDomainName(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      domainName_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * domain name example.com
     * </pre>
     *
     * <code>string domain_name = 1 [json_name = "domainName"];</code>
     * @return This builder for chaining.
     */
    public Builder clearDomainName() {
      domainName_ = getDefaultInstance().getDomainName();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * domain name example.com
     * </pre>
     *
     * <code>string domain_name = 1 [json_name = "domainName"];</code>
     * @param value The bytes for domainName to set.
     * @return This builder for chaining.
     */
    public Builder setDomainNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      domainName_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private int visibility_ = 0;
    /**
     * <pre>
     * domain visibility. for private visibility internal reserved ips are added to the zone.
     * for publicly visible domains external reserved domains are added to the zone.
     * </pre>
     *
     * <code>.leftbin.commons.proto.v1.network.dns.domain.rpc.enums.DnsDomainVisibility visibility = 2 [json_name = "visibility"];</code>
     * @return The enum numeric value on the wire for visibility.
     */
    @java.lang.Override public int getVisibilityValue() {
      return visibility_;
    }
    /**
     * <pre>
     * domain visibility. for private visibility internal reserved ips are added to the zone.
     * for publicly visible domains external reserved domains are added to the zone.
     * </pre>
     *
     * <code>.leftbin.commons.proto.v1.network.dns.domain.rpc.enums.DnsDomainVisibility visibility = 2 [json_name = "visibility"];</code>
     * @param value The enum numeric value on the wire for visibility to set.
     * @return This builder for chaining.
     */
    public Builder setVisibilityValue(int value) {
      visibility_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * domain visibility. for private visibility internal reserved ips are added to the zone.
     * for publicly visible domains external reserved domains are added to the zone.
     * </pre>
     *
     * <code>.leftbin.commons.proto.v1.network.dns.domain.rpc.enums.DnsDomainVisibility visibility = 2 [json_name = "visibility"];</code>
     * @return The visibility.
     */
    @java.lang.Override
    public com.leftbin.commons.proto.v1.network.dns.domain.rpc.enums.DnsDomainVisibility getVisibility() {
      com.leftbin.commons.proto.v1.network.dns.domain.rpc.enums.DnsDomainVisibility result = com.leftbin.commons.proto.v1.network.dns.domain.rpc.enums.DnsDomainVisibility.forNumber(visibility_);
      return result == null ? com.leftbin.commons.proto.v1.network.dns.domain.rpc.enums.DnsDomainVisibility.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * domain visibility. for private visibility internal reserved ips are added to the zone.
     * for publicly visible domains external reserved domains are added to the zone.
     * </pre>
     *
     * <code>.leftbin.commons.proto.v1.network.dns.domain.rpc.enums.DnsDomainVisibility visibility = 2 [json_name = "visibility"];</code>
     * @param value The visibility to set.
     * @return This builder for chaining.
     */
    public Builder setVisibility(com.leftbin.commons.proto.v1.network.dns.domain.rpc.enums.DnsDomainVisibility value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000002;
      visibility_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * domain visibility. for private visibility internal reserved ips are added to the zone.
     * for publicly visible domains external reserved domains are added to the zone.
     * </pre>
     *
     * <code>.leftbin.commons.proto.v1.network.dns.domain.rpc.enums.DnsDomainVisibility visibility = 2 [json_name = "visibility"];</code>
     * @return This builder for chaining.
     */
    public Builder clearVisibility() {
      bitField0_ = (bitField0_ & ~0x00000002);
      visibility_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<com.leftbin.commons.proto.v1.network.dns.record.rpc.DnsRecord> dnsRecords_ =
      java.util.Collections.emptyList();
    private void ensureDnsRecordsIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        dnsRecords_ = new java.util.ArrayList<com.leftbin.commons.proto.v1.network.dns.record.rpc.DnsRecord>(dnsRecords_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.leftbin.commons.proto.v1.network.dns.record.rpc.DnsRecord, com.leftbin.commons.proto.v1.network.dns.record.rpc.DnsRecord.Builder, com.leftbin.commons.proto.v1.network.dns.record.rpc.DnsRecordOrBuilder> dnsRecordsBuilder_;

    /**
     * <pre>
     * dns records to be added to the zone
     * </pre>
     *
     * <code>repeated .leftbin.commons.proto.v1.network.dns.record.rpc.DnsRecord dns_records = 3 [json_name = "dnsRecords"];</code>
     */
    public java.util.List<com.leftbin.commons.proto.v1.network.dns.record.rpc.DnsRecord> getDnsRecordsList() {
      if (dnsRecordsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(dnsRecords_);
      } else {
        return dnsRecordsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * dns records to be added to the zone
     * </pre>
     *
     * <code>repeated .leftbin.commons.proto.v1.network.dns.record.rpc.DnsRecord dns_records = 3 [json_name = "dnsRecords"];</code>
     */
    public int getDnsRecordsCount() {
      if (dnsRecordsBuilder_ == null) {
        return dnsRecords_.size();
      } else {
        return dnsRecordsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * dns records to be added to the zone
     * </pre>
     *
     * <code>repeated .leftbin.commons.proto.v1.network.dns.record.rpc.DnsRecord dns_records = 3 [json_name = "dnsRecords"];</code>
     */
    public com.leftbin.commons.proto.v1.network.dns.record.rpc.DnsRecord getDnsRecords(int index) {
      if (dnsRecordsBuilder_ == null) {
        return dnsRecords_.get(index);
      } else {
        return dnsRecordsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * dns records to be added to the zone
     * </pre>
     *
     * <code>repeated .leftbin.commons.proto.v1.network.dns.record.rpc.DnsRecord dns_records = 3 [json_name = "dnsRecords"];</code>
     */
    public Builder setDnsRecords(
        int index, com.leftbin.commons.proto.v1.network.dns.record.rpc.DnsRecord value) {
      if (dnsRecordsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDnsRecordsIsMutable();
        dnsRecords_.set(index, value);
        onChanged();
      } else {
        dnsRecordsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * dns records to be added to the zone
     * </pre>
     *
     * <code>repeated .leftbin.commons.proto.v1.network.dns.record.rpc.DnsRecord dns_records = 3 [json_name = "dnsRecords"];</code>
     */
    public Builder setDnsRecords(
        int index, com.leftbin.commons.proto.v1.network.dns.record.rpc.DnsRecord.Builder builderForValue) {
      if (dnsRecordsBuilder_ == null) {
        ensureDnsRecordsIsMutable();
        dnsRecords_.set(index, builderForValue.build());
        onChanged();
      } else {
        dnsRecordsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * dns records to be added to the zone
     * </pre>
     *
     * <code>repeated .leftbin.commons.proto.v1.network.dns.record.rpc.DnsRecord dns_records = 3 [json_name = "dnsRecords"];</code>
     */
    public Builder addDnsRecords(com.leftbin.commons.proto.v1.network.dns.record.rpc.DnsRecord value) {
      if (dnsRecordsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDnsRecordsIsMutable();
        dnsRecords_.add(value);
        onChanged();
      } else {
        dnsRecordsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * dns records to be added to the zone
     * </pre>
     *
     * <code>repeated .leftbin.commons.proto.v1.network.dns.record.rpc.DnsRecord dns_records = 3 [json_name = "dnsRecords"];</code>
     */
    public Builder addDnsRecords(
        int index, com.leftbin.commons.proto.v1.network.dns.record.rpc.DnsRecord value) {
      if (dnsRecordsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDnsRecordsIsMutable();
        dnsRecords_.add(index, value);
        onChanged();
      } else {
        dnsRecordsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * dns records to be added to the zone
     * </pre>
     *
     * <code>repeated .leftbin.commons.proto.v1.network.dns.record.rpc.DnsRecord dns_records = 3 [json_name = "dnsRecords"];</code>
     */
    public Builder addDnsRecords(
        com.leftbin.commons.proto.v1.network.dns.record.rpc.DnsRecord.Builder builderForValue) {
      if (dnsRecordsBuilder_ == null) {
        ensureDnsRecordsIsMutable();
        dnsRecords_.add(builderForValue.build());
        onChanged();
      } else {
        dnsRecordsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * dns records to be added to the zone
     * </pre>
     *
     * <code>repeated .leftbin.commons.proto.v1.network.dns.record.rpc.DnsRecord dns_records = 3 [json_name = "dnsRecords"];</code>
     */
    public Builder addDnsRecords(
        int index, com.leftbin.commons.proto.v1.network.dns.record.rpc.DnsRecord.Builder builderForValue) {
      if (dnsRecordsBuilder_ == null) {
        ensureDnsRecordsIsMutable();
        dnsRecords_.add(index, builderForValue.build());
        onChanged();
      } else {
        dnsRecordsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * dns records to be added to the zone
     * </pre>
     *
     * <code>repeated .leftbin.commons.proto.v1.network.dns.record.rpc.DnsRecord dns_records = 3 [json_name = "dnsRecords"];</code>
     */
    public Builder addAllDnsRecords(
        java.lang.Iterable<? extends com.leftbin.commons.proto.v1.network.dns.record.rpc.DnsRecord> values) {
      if (dnsRecordsBuilder_ == null) {
        ensureDnsRecordsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, dnsRecords_);
        onChanged();
      } else {
        dnsRecordsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * dns records to be added to the zone
     * </pre>
     *
     * <code>repeated .leftbin.commons.proto.v1.network.dns.record.rpc.DnsRecord dns_records = 3 [json_name = "dnsRecords"];</code>
     */
    public Builder clearDnsRecords() {
      if (dnsRecordsBuilder_ == null) {
        dnsRecords_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        dnsRecordsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * dns records to be added to the zone
     * </pre>
     *
     * <code>repeated .leftbin.commons.proto.v1.network.dns.record.rpc.DnsRecord dns_records = 3 [json_name = "dnsRecords"];</code>
     */
    public Builder removeDnsRecords(int index) {
      if (dnsRecordsBuilder_ == null) {
        ensureDnsRecordsIsMutable();
        dnsRecords_.remove(index);
        onChanged();
      } else {
        dnsRecordsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * dns records to be added to the zone
     * </pre>
     *
     * <code>repeated .leftbin.commons.proto.v1.network.dns.record.rpc.DnsRecord dns_records = 3 [json_name = "dnsRecords"];</code>
     */
    public com.leftbin.commons.proto.v1.network.dns.record.rpc.DnsRecord.Builder getDnsRecordsBuilder(
        int index) {
      return getDnsRecordsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * dns records to be added to the zone
     * </pre>
     *
     * <code>repeated .leftbin.commons.proto.v1.network.dns.record.rpc.DnsRecord dns_records = 3 [json_name = "dnsRecords"];</code>
     */
    public com.leftbin.commons.proto.v1.network.dns.record.rpc.DnsRecordOrBuilder getDnsRecordsOrBuilder(
        int index) {
      if (dnsRecordsBuilder_ == null) {
        return dnsRecords_.get(index);  } else {
        return dnsRecordsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * dns records to be added to the zone
     * </pre>
     *
     * <code>repeated .leftbin.commons.proto.v1.network.dns.record.rpc.DnsRecord dns_records = 3 [json_name = "dnsRecords"];</code>
     */
    public java.util.List<? extends com.leftbin.commons.proto.v1.network.dns.record.rpc.DnsRecordOrBuilder> 
         getDnsRecordsOrBuilderList() {
      if (dnsRecordsBuilder_ != null) {
        return dnsRecordsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(dnsRecords_);
      }
    }
    /**
     * <pre>
     * dns records to be added to the zone
     * </pre>
     *
     * <code>repeated .leftbin.commons.proto.v1.network.dns.record.rpc.DnsRecord dns_records = 3 [json_name = "dnsRecords"];</code>
     */
    public com.leftbin.commons.proto.v1.network.dns.record.rpc.DnsRecord.Builder addDnsRecordsBuilder() {
      return getDnsRecordsFieldBuilder().addBuilder(
          com.leftbin.commons.proto.v1.network.dns.record.rpc.DnsRecord.getDefaultInstance());
    }
    /**
     * <pre>
     * dns records to be added to the zone
     * </pre>
     *
     * <code>repeated .leftbin.commons.proto.v1.network.dns.record.rpc.DnsRecord dns_records = 3 [json_name = "dnsRecords"];</code>
     */
    public com.leftbin.commons.proto.v1.network.dns.record.rpc.DnsRecord.Builder addDnsRecordsBuilder(
        int index) {
      return getDnsRecordsFieldBuilder().addBuilder(
          index, com.leftbin.commons.proto.v1.network.dns.record.rpc.DnsRecord.getDefaultInstance());
    }
    /**
     * <pre>
     * dns records to be added to the zone
     * </pre>
     *
     * <code>repeated .leftbin.commons.proto.v1.network.dns.record.rpc.DnsRecord dns_records = 3 [json_name = "dnsRecords"];</code>
     */
    public java.util.List<com.leftbin.commons.proto.v1.network.dns.record.rpc.DnsRecord.Builder> 
         getDnsRecordsBuilderList() {
      return getDnsRecordsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.leftbin.commons.proto.v1.network.dns.record.rpc.DnsRecord, com.leftbin.commons.proto.v1.network.dns.record.rpc.DnsRecord.Builder, com.leftbin.commons.proto.v1.network.dns.record.rpc.DnsRecordOrBuilder> 
        getDnsRecordsFieldBuilder() {
      if (dnsRecordsBuilder_ == null) {
        dnsRecordsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.leftbin.commons.proto.v1.network.dns.record.rpc.DnsRecord, com.leftbin.commons.proto.v1.network.dns.record.rpc.DnsRecord.Builder, com.leftbin.commons.proto.v1.network.dns.record.rpc.DnsRecordOrBuilder>(
                dnsRecords_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        dnsRecords_ = null;
      }
      return dnsRecordsBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:leftbin.commons.proto.v1.network.dns.domain.rpc.DnsDomain)
  }

  // @@protoc_insertion_point(class_scope:leftbin.commons.proto.v1.network.dns.domain.rpc.DnsDomain)
  private static final com.leftbin.commons.proto.v1.network.dns.domain.rpc.DnsDomain DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.leftbin.commons.proto.v1.network.dns.domain.rpc.DnsDomain();
  }

  public static com.leftbin.commons.proto.v1.network.dns.domain.rpc.DnsDomain getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<DnsDomain>
      PARSER = new com.google.protobuf.AbstractParser<DnsDomain>() {
    @java.lang.Override
    public DnsDomain parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<DnsDomain> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<DnsDomain> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.leftbin.commons.proto.v1.network.dns.domain.rpc.DnsDomain getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

