// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: leftbin/commons/proto/v1/kafka/model.proto

package com.leftbin.commons.proto.v1.kafka;

/**
 * <pre>
 * this is used to get meta information of kafka streams instance
 * </pre>
 *
 * Protobuf type {@code leftbin.commons.proto.v1.kafka.InstanceMeta}
 */
public final class InstanceMeta extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:leftbin.commons.proto.v1.kafka.InstanceMeta)
    InstanceMetaOrBuilder {
private static final long serialVersionUID = 0L;
  // Use InstanceMeta.newBuilder() to construct.
  private InstanceMeta(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private InstanceMeta() {
    stateStoreNames_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    topicPartitions_ = java.util.Collections.emptyList();
    standbyStateStoreNames_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    standbyTopicPartitions_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new InstanceMeta();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.leftbin.commons.proto.v1.kafka.ModelProto.internal_static_leftbin_commons_proto_v1_kafka_InstanceMeta_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.leftbin.commons.proto.v1.kafka.ModelProto.internal_static_leftbin_commons_proto_v1_kafka_InstanceMeta_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.leftbin.commons.proto.v1.kafka.InstanceMeta.class, com.leftbin.commons.proto.v1.kafka.InstanceMeta.Builder.class);
  }

  public static final int HOST_INFO_FIELD_NUMBER = 1;
  private com.leftbin.commons.proto.v1.kafka.HostInfo hostInfo_;
  /**
   * <code>.leftbin.commons.proto.v1.kafka.HostInfo host_info = 1 [json_name = "hostInfo"];</code>
   * @return Whether the hostInfo field is set.
   */
  @java.lang.Override
  public boolean hasHostInfo() {
    return hostInfo_ != null;
  }
  /**
   * <code>.leftbin.commons.proto.v1.kafka.HostInfo host_info = 1 [json_name = "hostInfo"];</code>
   * @return The hostInfo.
   */
  @java.lang.Override
  public com.leftbin.commons.proto.v1.kafka.HostInfo getHostInfo() {
    return hostInfo_ == null ? com.leftbin.commons.proto.v1.kafka.HostInfo.getDefaultInstance() : hostInfo_;
  }
  /**
   * <code>.leftbin.commons.proto.v1.kafka.HostInfo host_info = 1 [json_name = "hostInfo"];</code>
   */
  @java.lang.Override
  public com.leftbin.commons.proto.v1.kafka.HostInfoOrBuilder getHostInfoOrBuilder() {
    return hostInfo_ == null ? com.leftbin.commons.proto.v1.kafka.HostInfo.getDefaultInstance() : hostInfo_;
  }

  public static final int STATE_STORE_NAMES_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private com.google.protobuf.LazyStringArrayList stateStoreNames_ =
      com.google.protobuf.LazyStringArrayList.emptyList();
  /**
   * <code>repeated string state_store_names = 2 [json_name = "stateStoreNames"];</code>
   * @return A list containing the stateStoreNames.
   */
  public com.google.protobuf.ProtocolStringList
      getStateStoreNamesList() {
    return stateStoreNames_;
  }
  /**
   * <code>repeated string state_store_names = 2 [json_name = "stateStoreNames"];</code>
   * @return The count of stateStoreNames.
   */
  public int getStateStoreNamesCount() {
    return stateStoreNames_.size();
  }
  /**
   * <code>repeated string state_store_names = 2 [json_name = "stateStoreNames"];</code>
   * @param index The index of the element to return.
   * @return The stateStoreNames at the given index.
   */
  public java.lang.String getStateStoreNames(int index) {
    return stateStoreNames_.get(index);
  }
  /**
   * <code>repeated string state_store_names = 2 [json_name = "stateStoreNames"];</code>
   * @param index The index of the value to return.
   * @return The bytes of the stateStoreNames at the given index.
   */
  public com.google.protobuf.ByteString
      getStateStoreNamesBytes(int index) {
    return stateStoreNames_.getByteString(index);
  }

  public static final int TOPIC_PARTITIONS_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private java.util.List<com.leftbin.commons.proto.v1.kafka.TopicPartition> topicPartitions_;
  /**
   * <code>repeated .leftbin.commons.proto.v1.kafka.TopicPartition topic_partitions = 3 [json_name = "topicPartitions"];</code>
   */
  @java.lang.Override
  public java.util.List<com.leftbin.commons.proto.v1.kafka.TopicPartition> getTopicPartitionsList() {
    return topicPartitions_;
  }
  /**
   * <code>repeated .leftbin.commons.proto.v1.kafka.TopicPartition topic_partitions = 3 [json_name = "topicPartitions"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.leftbin.commons.proto.v1.kafka.TopicPartitionOrBuilder> 
      getTopicPartitionsOrBuilderList() {
    return topicPartitions_;
  }
  /**
   * <code>repeated .leftbin.commons.proto.v1.kafka.TopicPartition topic_partitions = 3 [json_name = "topicPartitions"];</code>
   */
  @java.lang.Override
  public int getTopicPartitionsCount() {
    return topicPartitions_.size();
  }
  /**
   * <code>repeated .leftbin.commons.proto.v1.kafka.TopicPartition topic_partitions = 3 [json_name = "topicPartitions"];</code>
   */
  @java.lang.Override
  public com.leftbin.commons.proto.v1.kafka.TopicPartition getTopicPartitions(int index) {
    return topicPartitions_.get(index);
  }
  /**
   * <code>repeated .leftbin.commons.proto.v1.kafka.TopicPartition topic_partitions = 3 [json_name = "topicPartitions"];</code>
   */
  @java.lang.Override
  public com.leftbin.commons.proto.v1.kafka.TopicPartitionOrBuilder getTopicPartitionsOrBuilder(
      int index) {
    return topicPartitions_.get(index);
  }

  public static final int STANDBY_STATE_STORE_NAMES_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private com.google.protobuf.LazyStringArrayList standbyStateStoreNames_ =
      com.google.protobuf.LazyStringArrayList.emptyList();
  /**
   * <code>repeated string standby_state_store_names = 4 [json_name = "standbyStateStoreNames"];</code>
   * @return A list containing the standbyStateStoreNames.
   */
  public com.google.protobuf.ProtocolStringList
      getStandbyStateStoreNamesList() {
    return standbyStateStoreNames_;
  }
  /**
   * <code>repeated string standby_state_store_names = 4 [json_name = "standbyStateStoreNames"];</code>
   * @return The count of standbyStateStoreNames.
   */
  public int getStandbyStateStoreNamesCount() {
    return standbyStateStoreNames_.size();
  }
  /**
   * <code>repeated string standby_state_store_names = 4 [json_name = "standbyStateStoreNames"];</code>
   * @param index The index of the element to return.
   * @return The standbyStateStoreNames at the given index.
   */
  public java.lang.String getStandbyStateStoreNames(int index) {
    return standbyStateStoreNames_.get(index);
  }
  /**
   * <code>repeated string standby_state_store_names = 4 [json_name = "standbyStateStoreNames"];</code>
   * @param index The index of the value to return.
   * @return The bytes of the standbyStateStoreNames at the given index.
   */
  public com.google.protobuf.ByteString
      getStandbyStateStoreNamesBytes(int index) {
    return standbyStateStoreNames_.getByteString(index);
  }

  public static final int STANDBY_TOPIC_PARTITIONS_FIELD_NUMBER = 5;
  @SuppressWarnings("serial")
  private java.util.List<com.leftbin.commons.proto.v1.kafka.TopicPartition> standbyTopicPartitions_;
  /**
   * <code>repeated .leftbin.commons.proto.v1.kafka.TopicPartition standby_topic_partitions = 5 [json_name = "standbyTopicPartitions"];</code>
   */
  @java.lang.Override
  public java.util.List<com.leftbin.commons.proto.v1.kafka.TopicPartition> getStandbyTopicPartitionsList() {
    return standbyTopicPartitions_;
  }
  /**
   * <code>repeated .leftbin.commons.proto.v1.kafka.TopicPartition standby_topic_partitions = 5 [json_name = "standbyTopicPartitions"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.leftbin.commons.proto.v1.kafka.TopicPartitionOrBuilder> 
      getStandbyTopicPartitionsOrBuilderList() {
    return standbyTopicPartitions_;
  }
  /**
   * <code>repeated .leftbin.commons.proto.v1.kafka.TopicPartition standby_topic_partitions = 5 [json_name = "standbyTopicPartitions"];</code>
   */
  @java.lang.Override
  public int getStandbyTopicPartitionsCount() {
    return standbyTopicPartitions_.size();
  }
  /**
   * <code>repeated .leftbin.commons.proto.v1.kafka.TopicPartition standby_topic_partitions = 5 [json_name = "standbyTopicPartitions"];</code>
   */
  @java.lang.Override
  public com.leftbin.commons.proto.v1.kafka.TopicPartition getStandbyTopicPartitions(int index) {
    return standbyTopicPartitions_.get(index);
  }
  /**
   * <code>repeated .leftbin.commons.proto.v1.kafka.TopicPartition standby_topic_partitions = 5 [json_name = "standbyTopicPartitions"];</code>
   */
  @java.lang.Override
  public com.leftbin.commons.proto.v1.kafka.TopicPartitionOrBuilder getStandbyTopicPartitionsOrBuilder(
      int index) {
    return standbyTopicPartitions_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (hostInfo_ != null) {
      output.writeMessage(1, getHostInfo());
    }
    for (int i = 0; i < stateStoreNames_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, stateStoreNames_.getRaw(i));
    }
    for (int i = 0; i < topicPartitions_.size(); i++) {
      output.writeMessage(3, topicPartitions_.get(i));
    }
    for (int i = 0; i < standbyStateStoreNames_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, standbyStateStoreNames_.getRaw(i));
    }
    for (int i = 0; i < standbyTopicPartitions_.size(); i++) {
      output.writeMessage(5, standbyTopicPartitions_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (hostInfo_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getHostInfo());
    }
    {
      int dataSize = 0;
      for (int i = 0; i < stateStoreNames_.size(); i++) {
        dataSize += computeStringSizeNoTag(stateStoreNames_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getStateStoreNamesList().size();
    }
    for (int i = 0; i < topicPartitions_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, topicPartitions_.get(i));
    }
    {
      int dataSize = 0;
      for (int i = 0; i < standbyStateStoreNames_.size(); i++) {
        dataSize += computeStringSizeNoTag(standbyStateStoreNames_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getStandbyStateStoreNamesList().size();
    }
    for (int i = 0; i < standbyTopicPartitions_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, standbyTopicPartitions_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.leftbin.commons.proto.v1.kafka.InstanceMeta)) {
      return super.equals(obj);
    }
    com.leftbin.commons.proto.v1.kafka.InstanceMeta other = (com.leftbin.commons.proto.v1.kafka.InstanceMeta) obj;

    if (hasHostInfo() != other.hasHostInfo()) return false;
    if (hasHostInfo()) {
      if (!getHostInfo()
          .equals(other.getHostInfo())) return false;
    }
    if (!getStateStoreNamesList()
        .equals(other.getStateStoreNamesList())) return false;
    if (!getTopicPartitionsList()
        .equals(other.getTopicPartitionsList())) return false;
    if (!getStandbyStateStoreNamesList()
        .equals(other.getStandbyStateStoreNamesList())) return false;
    if (!getStandbyTopicPartitionsList()
        .equals(other.getStandbyTopicPartitionsList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasHostInfo()) {
      hash = (37 * hash) + HOST_INFO_FIELD_NUMBER;
      hash = (53 * hash) + getHostInfo().hashCode();
    }
    if (getStateStoreNamesCount() > 0) {
      hash = (37 * hash) + STATE_STORE_NAMES_FIELD_NUMBER;
      hash = (53 * hash) + getStateStoreNamesList().hashCode();
    }
    if (getTopicPartitionsCount() > 0) {
      hash = (37 * hash) + TOPIC_PARTITIONS_FIELD_NUMBER;
      hash = (53 * hash) + getTopicPartitionsList().hashCode();
    }
    if (getStandbyStateStoreNamesCount() > 0) {
      hash = (37 * hash) + STANDBY_STATE_STORE_NAMES_FIELD_NUMBER;
      hash = (53 * hash) + getStandbyStateStoreNamesList().hashCode();
    }
    if (getStandbyTopicPartitionsCount() > 0) {
      hash = (37 * hash) + STANDBY_TOPIC_PARTITIONS_FIELD_NUMBER;
      hash = (53 * hash) + getStandbyTopicPartitionsList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.leftbin.commons.proto.v1.kafka.InstanceMeta parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.leftbin.commons.proto.v1.kafka.InstanceMeta parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.leftbin.commons.proto.v1.kafka.InstanceMeta parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.leftbin.commons.proto.v1.kafka.InstanceMeta parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.leftbin.commons.proto.v1.kafka.InstanceMeta parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.leftbin.commons.proto.v1.kafka.InstanceMeta parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.leftbin.commons.proto.v1.kafka.InstanceMeta parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.leftbin.commons.proto.v1.kafka.InstanceMeta parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.leftbin.commons.proto.v1.kafka.InstanceMeta parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.leftbin.commons.proto.v1.kafka.InstanceMeta parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.leftbin.commons.proto.v1.kafka.InstanceMeta parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.leftbin.commons.proto.v1.kafka.InstanceMeta parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.leftbin.commons.proto.v1.kafka.InstanceMeta prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * this is used to get meta information of kafka streams instance
   * </pre>
   *
   * Protobuf type {@code leftbin.commons.proto.v1.kafka.InstanceMeta}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:leftbin.commons.proto.v1.kafka.InstanceMeta)
      com.leftbin.commons.proto.v1.kafka.InstanceMetaOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.leftbin.commons.proto.v1.kafka.ModelProto.internal_static_leftbin_commons_proto_v1_kafka_InstanceMeta_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.leftbin.commons.proto.v1.kafka.ModelProto.internal_static_leftbin_commons_proto_v1_kafka_InstanceMeta_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.leftbin.commons.proto.v1.kafka.InstanceMeta.class, com.leftbin.commons.proto.v1.kafka.InstanceMeta.Builder.class);
    }

    // Construct using com.leftbin.commons.proto.v1.kafka.InstanceMeta.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      hostInfo_ = null;
      if (hostInfoBuilder_ != null) {
        hostInfoBuilder_.dispose();
        hostInfoBuilder_ = null;
      }
      stateStoreNames_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      if (topicPartitionsBuilder_ == null) {
        topicPartitions_ = java.util.Collections.emptyList();
      } else {
        topicPartitions_ = null;
        topicPartitionsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000004);
      standbyStateStoreNames_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      if (standbyTopicPartitionsBuilder_ == null) {
        standbyTopicPartitions_ = java.util.Collections.emptyList();
      } else {
        standbyTopicPartitions_ = null;
        standbyTopicPartitionsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000010);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.leftbin.commons.proto.v1.kafka.ModelProto.internal_static_leftbin_commons_proto_v1_kafka_InstanceMeta_descriptor;
    }

    @java.lang.Override
    public com.leftbin.commons.proto.v1.kafka.InstanceMeta getDefaultInstanceForType() {
      return com.leftbin.commons.proto.v1.kafka.InstanceMeta.getDefaultInstance();
    }

    @java.lang.Override
    public com.leftbin.commons.proto.v1.kafka.InstanceMeta build() {
      com.leftbin.commons.proto.v1.kafka.InstanceMeta result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.leftbin.commons.proto.v1.kafka.InstanceMeta buildPartial() {
      com.leftbin.commons.proto.v1.kafka.InstanceMeta result = new com.leftbin.commons.proto.v1.kafka.InstanceMeta(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.leftbin.commons.proto.v1.kafka.InstanceMeta result) {
      if (topicPartitionsBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          topicPartitions_ = java.util.Collections.unmodifiableList(topicPartitions_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.topicPartitions_ = topicPartitions_;
      } else {
        result.topicPartitions_ = topicPartitionsBuilder_.build();
      }
      if (standbyTopicPartitionsBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0)) {
          standbyTopicPartitions_ = java.util.Collections.unmodifiableList(standbyTopicPartitions_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.standbyTopicPartitions_ = standbyTopicPartitions_;
      } else {
        result.standbyTopicPartitions_ = standbyTopicPartitionsBuilder_.build();
      }
    }

    private void buildPartial0(com.leftbin.commons.proto.v1.kafka.InstanceMeta result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.hostInfo_ = hostInfoBuilder_ == null
            ? hostInfo_
            : hostInfoBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        stateStoreNames_.makeImmutable();
        result.stateStoreNames_ = stateStoreNames_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        standbyStateStoreNames_.makeImmutable();
        result.standbyStateStoreNames_ = standbyStateStoreNames_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.leftbin.commons.proto.v1.kafka.InstanceMeta) {
        return mergeFrom((com.leftbin.commons.proto.v1.kafka.InstanceMeta)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.leftbin.commons.proto.v1.kafka.InstanceMeta other) {
      if (other == com.leftbin.commons.proto.v1.kafka.InstanceMeta.getDefaultInstance()) return this;
      if (other.hasHostInfo()) {
        mergeHostInfo(other.getHostInfo());
      }
      if (!other.stateStoreNames_.isEmpty()) {
        if (stateStoreNames_.isEmpty()) {
          stateStoreNames_ = other.stateStoreNames_;
          bitField0_ |= 0x00000002;
        } else {
          ensureStateStoreNamesIsMutable();
          stateStoreNames_.addAll(other.stateStoreNames_);
        }
        onChanged();
      }
      if (topicPartitionsBuilder_ == null) {
        if (!other.topicPartitions_.isEmpty()) {
          if (topicPartitions_.isEmpty()) {
            topicPartitions_ = other.topicPartitions_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureTopicPartitionsIsMutable();
            topicPartitions_.addAll(other.topicPartitions_);
          }
          onChanged();
        }
      } else {
        if (!other.topicPartitions_.isEmpty()) {
          if (topicPartitionsBuilder_.isEmpty()) {
            topicPartitionsBuilder_.dispose();
            topicPartitionsBuilder_ = null;
            topicPartitions_ = other.topicPartitions_;
            bitField0_ = (bitField0_ & ~0x00000004);
            topicPartitionsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getTopicPartitionsFieldBuilder() : null;
          } else {
            topicPartitionsBuilder_.addAllMessages(other.topicPartitions_);
          }
        }
      }
      if (!other.standbyStateStoreNames_.isEmpty()) {
        if (standbyStateStoreNames_.isEmpty()) {
          standbyStateStoreNames_ = other.standbyStateStoreNames_;
          bitField0_ |= 0x00000008;
        } else {
          ensureStandbyStateStoreNamesIsMutable();
          standbyStateStoreNames_.addAll(other.standbyStateStoreNames_);
        }
        onChanged();
      }
      if (standbyTopicPartitionsBuilder_ == null) {
        if (!other.standbyTopicPartitions_.isEmpty()) {
          if (standbyTopicPartitions_.isEmpty()) {
            standbyTopicPartitions_ = other.standbyTopicPartitions_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureStandbyTopicPartitionsIsMutable();
            standbyTopicPartitions_.addAll(other.standbyTopicPartitions_);
          }
          onChanged();
        }
      } else {
        if (!other.standbyTopicPartitions_.isEmpty()) {
          if (standbyTopicPartitionsBuilder_.isEmpty()) {
            standbyTopicPartitionsBuilder_.dispose();
            standbyTopicPartitionsBuilder_ = null;
            standbyTopicPartitions_ = other.standbyTopicPartitions_;
            bitField0_ = (bitField0_ & ~0x00000010);
            standbyTopicPartitionsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getStandbyTopicPartitionsFieldBuilder() : null;
          } else {
            standbyTopicPartitionsBuilder_.addAllMessages(other.standbyTopicPartitions_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getHostInfoFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();
              ensureStateStoreNamesIsMutable();
              stateStoreNames_.add(s);
              break;
            } // case 18
            case 26: {
              com.leftbin.commons.proto.v1.kafka.TopicPartition m =
                  input.readMessage(
                      com.leftbin.commons.proto.v1.kafka.TopicPartition.parser(),
                      extensionRegistry);
              if (topicPartitionsBuilder_ == null) {
                ensureTopicPartitionsIsMutable();
                topicPartitions_.add(m);
              } else {
                topicPartitionsBuilder_.addMessage(m);
              }
              break;
            } // case 26
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();
              ensureStandbyStateStoreNamesIsMutable();
              standbyStateStoreNames_.add(s);
              break;
            } // case 34
            case 42: {
              com.leftbin.commons.proto.v1.kafka.TopicPartition m =
                  input.readMessage(
                      com.leftbin.commons.proto.v1.kafka.TopicPartition.parser(),
                      extensionRegistry);
              if (standbyTopicPartitionsBuilder_ == null) {
                ensureStandbyTopicPartitionsIsMutable();
                standbyTopicPartitions_.add(m);
              } else {
                standbyTopicPartitionsBuilder_.addMessage(m);
              }
              break;
            } // case 42
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private com.leftbin.commons.proto.v1.kafka.HostInfo hostInfo_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.leftbin.commons.proto.v1.kafka.HostInfo, com.leftbin.commons.proto.v1.kafka.HostInfo.Builder, com.leftbin.commons.proto.v1.kafka.HostInfoOrBuilder> hostInfoBuilder_;
    /**
     * <code>.leftbin.commons.proto.v1.kafka.HostInfo host_info = 1 [json_name = "hostInfo"];</code>
     * @return Whether the hostInfo field is set.
     */
    public boolean hasHostInfo() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>.leftbin.commons.proto.v1.kafka.HostInfo host_info = 1 [json_name = "hostInfo"];</code>
     * @return The hostInfo.
     */
    public com.leftbin.commons.proto.v1.kafka.HostInfo getHostInfo() {
      if (hostInfoBuilder_ == null) {
        return hostInfo_ == null ? com.leftbin.commons.proto.v1.kafka.HostInfo.getDefaultInstance() : hostInfo_;
      } else {
        return hostInfoBuilder_.getMessage();
      }
    }
    /**
     * <code>.leftbin.commons.proto.v1.kafka.HostInfo host_info = 1 [json_name = "hostInfo"];</code>
     */
    public Builder setHostInfo(com.leftbin.commons.proto.v1.kafka.HostInfo value) {
      if (hostInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        hostInfo_ = value;
      } else {
        hostInfoBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>.leftbin.commons.proto.v1.kafka.HostInfo host_info = 1 [json_name = "hostInfo"];</code>
     */
    public Builder setHostInfo(
        com.leftbin.commons.proto.v1.kafka.HostInfo.Builder builderForValue) {
      if (hostInfoBuilder_ == null) {
        hostInfo_ = builderForValue.build();
      } else {
        hostInfoBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>.leftbin.commons.proto.v1.kafka.HostInfo host_info = 1 [json_name = "hostInfo"];</code>
     */
    public Builder mergeHostInfo(com.leftbin.commons.proto.v1.kafka.HostInfo value) {
      if (hostInfoBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          hostInfo_ != null &&
          hostInfo_ != com.leftbin.commons.proto.v1.kafka.HostInfo.getDefaultInstance()) {
          getHostInfoBuilder().mergeFrom(value);
        } else {
          hostInfo_ = value;
        }
      } else {
        hostInfoBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>.leftbin.commons.proto.v1.kafka.HostInfo host_info = 1 [json_name = "hostInfo"];</code>
     */
    public Builder clearHostInfo() {
      bitField0_ = (bitField0_ & ~0x00000001);
      hostInfo_ = null;
      if (hostInfoBuilder_ != null) {
        hostInfoBuilder_.dispose();
        hostInfoBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <code>.leftbin.commons.proto.v1.kafka.HostInfo host_info = 1 [json_name = "hostInfo"];</code>
     */
    public com.leftbin.commons.proto.v1.kafka.HostInfo.Builder getHostInfoBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getHostInfoFieldBuilder().getBuilder();
    }
    /**
     * <code>.leftbin.commons.proto.v1.kafka.HostInfo host_info = 1 [json_name = "hostInfo"];</code>
     */
    public com.leftbin.commons.proto.v1.kafka.HostInfoOrBuilder getHostInfoOrBuilder() {
      if (hostInfoBuilder_ != null) {
        return hostInfoBuilder_.getMessageOrBuilder();
      } else {
        return hostInfo_ == null ?
            com.leftbin.commons.proto.v1.kafka.HostInfo.getDefaultInstance() : hostInfo_;
      }
    }
    /**
     * <code>.leftbin.commons.proto.v1.kafka.HostInfo host_info = 1 [json_name = "hostInfo"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.leftbin.commons.proto.v1.kafka.HostInfo, com.leftbin.commons.proto.v1.kafka.HostInfo.Builder, com.leftbin.commons.proto.v1.kafka.HostInfoOrBuilder> 
        getHostInfoFieldBuilder() {
      if (hostInfoBuilder_ == null) {
        hostInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.leftbin.commons.proto.v1.kafka.HostInfo, com.leftbin.commons.proto.v1.kafka.HostInfo.Builder, com.leftbin.commons.proto.v1.kafka.HostInfoOrBuilder>(
                getHostInfo(),
                getParentForChildren(),
                isClean());
        hostInfo_ = null;
      }
      return hostInfoBuilder_;
    }

    private com.google.protobuf.LazyStringArrayList stateStoreNames_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    private void ensureStateStoreNamesIsMutable() {
      if (!stateStoreNames_.isModifiable()) {
        stateStoreNames_ = new com.google.protobuf.LazyStringArrayList(stateStoreNames_);
      }
      bitField0_ |= 0x00000002;
    }
    /**
     * <code>repeated string state_store_names = 2 [json_name = "stateStoreNames"];</code>
     * @return A list containing the stateStoreNames.
     */
    public com.google.protobuf.ProtocolStringList
        getStateStoreNamesList() {
      stateStoreNames_.makeImmutable();
      return stateStoreNames_;
    }
    /**
     * <code>repeated string state_store_names = 2 [json_name = "stateStoreNames"];</code>
     * @return The count of stateStoreNames.
     */
    public int getStateStoreNamesCount() {
      return stateStoreNames_.size();
    }
    /**
     * <code>repeated string state_store_names = 2 [json_name = "stateStoreNames"];</code>
     * @param index The index of the element to return.
     * @return The stateStoreNames at the given index.
     */
    public java.lang.String getStateStoreNames(int index) {
      return stateStoreNames_.get(index);
    }
    /**
     * <code>repeated string state_store_names = 2 [json_name = "stateStoreNames"];</code>
     * @param index The index of the value to return.
     * @return The bytes of the stateStoreNames at the given index.
     */
    public com.google.protobuf.ByteString
        getStateStoreNamesBytes(int index) {
      return stateStoreNames_.getByteString(index);
    }
    /**
     * <code>repeated string state_store_names = 2 [json_name = "stateStoreNames"];</code>
     * @param index The index to set the value at.
     * @param value The stateStoreNames to set.
     * @return This builder for chaining.
     */
    public Builder setStateStoreNames(
        int index, java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureStateStoreNamesIsMutable();
      stateStoreNames_.set(index, value);
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>repeated string state_store_names = 2 [json_name = "stateStoreNames"];</code>
     * @param value The stateStoreNames to add.
     * @return This builder for chaining.
     */
    public Builder addStateStoreNames(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureStateStoreNamesIsMutable();
      stateStoreNames_.add(value);
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>repeated string state_store_names = 2 [json_name = "stateStoreNames"];</code>
     * @param values The stateStoreNames to add.
     * @return This builder for chaining.
     */
    public Builder addAllStateStoreNames(
        java.lang.Iterable<java.lang.String> values) {
      ensureStateStoreNamesIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, stateStoreNames_);
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>repeated string state_store_names = 2 [json_name = "stateStoreNames"];</code>
     * @return This builder for chaining.
     */
    public Builder clearStateStoreNames() {
      stateStoreNames_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
      bitField0_ = (bitField0_ & ~0x00000002);;
      onChanged();
      return this;
    }
    /**
     * <code>repeated string state_store_names = 2 [json_name = "stateStoreNames"];</code>
     * @param value The bytes of the stateStoreNames to add.
     * @return This builder for chaining.
     */
    public Builder addStateStoreNamesBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      ensureStateStoreNamesIsMutable();
      stateStoreNames_.add(value);
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private java.util.List<com.leftbin.commons.proto.v1.kafka.TopicPartition> topicPartitions_ =
      java.util.Collections.emptyList();
    private void ensureTopicPartitionsIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        topicPartitions_ = new java.util.ArrayList<com.leftbin.commons.proto.v1.kafka.TopicPartition>(topicPartitions_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.leftbin.commons.proto.v1.kafka.TopicPartition, com.leftbin.commons.proto.v1.kafka.TopicPartition.Builder, com.leftbin.commons.proto.v1.kafka.TopicPartitionOrBuilder> topicPartitionsBuilder_;

    /**
     * <code>repeated .leftbin.commons.proto.v1.kafka.TopicPartition topic_partitions = 3 [json_name = "topicPartitions"];</code>
     */
    public java.util.List<com.leftbin.commons.proto.v1.kafka.TopicPartition> getTopicPartitionsList() {
      if (topicPartitionsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(topicPartitions_);
      } else {
        return topicPartitionsBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .leftbin.commons.proto.v1.kafka.TopicPartition topic_partitions = 3 [json_name = "topicPartitions"];</code>
     */
    public int getTopicPartitionsCount() {
      if (topicPartitionsBuilder_ == null) {
        return topicPartitions_.size();
      } else {
        return topicPartitionsBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .leftbin.commons.proto.v1.kafka.TopicPartition topic_partitions = 3 [json_name = "topicPartitions"];</code>
     */
    public com.leftbin.commons.proto.v1.kafka.TopicPartition getTopicPartitions(int index) {
      if (topicPartitionsBuilder_ == null) {
        return topicPartitions_.get(index);
      } else {
        return topicPartitionsBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .leftbin.commons.proto.v1.kafka.TopicPartition topic_partitions = 3 [json_name = "topicPartitions"];</code>
     */
    public Builder setTopicPartitions(
        int index, com.leftbin.commons.proto.v1.kafka.TopicPartition value) {
      if (topicPartitionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTopicPartitionsIsMutable();
        topicPartitions_.set(index, value);
        onChanged();
      } else {
        topicPartitionsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .leftbin.commons.proto.v1.kafka.TopicPartition topic_partitions = 3 [json_name = "topicPartitions"];</code>
     */
    public Builder setTopicPartitions(
        int index, com.leftbin.commons.proto.v1.kafka.TopicPartition.Builder builderForValue) {
      if (topicPartitionsBuilder_ == null) {
        ensureTopicPartitionsIsMutable();
        topicPartitions_.set(index, builderForValue.build());
        onChanged();
      } else {
        topicPartitionsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .leftbin.commons.proto.v1.kafka.TopicPartition topic_partitions = 3 [json_name = "topicPartitions"];</code>
     */
    public Builder addTopicPartitions(com.leftbin.commons.proto.v1.kafka.TopicPartition value) {
      if (topicPartitionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTopicPartitionsIsMutable();
        topicPartitions_.add(value);
        onChanged();
      } else {
        topicPartitionsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .leftbin.commons.proto.v1.kafka.TopicPartition topic_partitions = 3 [json_name = "topicPartitions"];</code>
     */
    public Builder addTopicPartitions(
        int index, com.leftbin.commons.proto.v1.kafka.TopicPartition value) {
      if (topicPartitionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTopicPartitionsIsMutable();
        topicPartitions_.add(index, value);
        onChanged();
      } else {
        topicPartitionsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .leftbin.commons.proto.v1.kafka.TopicPartition topic_partitions = 3 [json_name = "topicPartitions"];</code>
     */
    public Builder addTopicPartitions(
        com.leftbin.commons.proto.v1.kafka.TopicPartition.Builder builderForValue) {
      if (topicPartitionsBuilder_ == null) {
        ensureTopicPartitionsIsMutable();
        topicPartitions_.add(builderForValue.build());
        onChanged();
      } else {
        topicPartitionsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .leftbin.commons.proto.v1.kafka.TopicPartition topic_partitions = 3 [json_name = "topicPartitions"];</code>
     */
    public Builder addTopicPartitions(
        int index, com.leftbin.commons.proto.v1.kafka.TopicPartition.Builder builderForValue) {
      if (topicPartitionsBuilder_ == null) {
        ensureTopicPartitionsIsMutable();
        topicPartitions_.add(index, builderForValue.build());
        onChanged();
      } else {
        topicPartitionsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .leftbin.commons.proto.v1.kafka.TopicPartition topic_partitions = 3 [json_name = "topicPartitions"];</code>
     */
    public Builder addAllTopicPartitions(
        java.lang.Iterable<? extends com.leftbin.commons.proto.v1.kafka.TopicPartition> values) {
      if (topicPartitionsBuilder_ == null) {
        ensureTopicPartitionsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, topicPartitions_);
        onChanged();
      } else {
        topicPartitionsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .leftbin.commons.proto.v1.kafka.TopicPartition topic_partitions = 3 [json_name = "topicPartitions"];</code>
     */
    public Builder clearTopicPartitions() {
      if (topicPartitionsBuilder_ == null) {
        topicPartitions_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        topicPartitionsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .leftbin.commons.proto.v1.kafka.TopicPartition topic_partitions = 3 [json_name = "topicPartitions"];</code>
     */
    public Builder removeTopicPartitions(int index) {
      if (topicPartitionsBuilder_ == null) {
        ensureTopicPartitionsIsMutable();
        topicPartitions_.remove(index);
        onChanged();
      } else {
        topicPartitionsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .leftbin.commons.proto.v1.kafka.TopicPartition topic_partitions = 3 [json_name = "topicPartitions"];</code>
     */
    public com.leftbin.commons.proto.v1.kafka.TopicPartition.Builder getTopicPartitionsBuilder(
        int index) {
      return getTopicPartitionsFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .leftbin.commons.proto.v1.kafka.TopicPartition topic_partitions = 3 [json_name = "topicPartitions"];</code>
     */
    public com.leftbin.commons.proto.v1.kafka.TopicPartitionOrBuilder getTopicPartitionsOrBuilder(
        int index) {
      if (topicPartitionsBuilder_ == null) {
        return topicPartitions_.get(index);  } else {
        return topicPartitionsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .leftbin.commons.proto.v1.kafka.TopicPartition topic_partitions = 3 [json_name = "topicPartitions"];</code>
     */
    public java.util.List<? extends com.leftbin.commons.proto.v1.kafka.TopicPartitionOrBuilder> 
         getTopicPartitionsOrBuilderList() {
      if (topicPartitionsBuilder_ != null) {
        return topicPartitionsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(topicPartitions_);
      }
    }
    /**
     * <code>repeated .leftbin.commons.proto.v1.kafka.TopicPartition topic_partitions = 3 [json_name = "topicPartitions"];</code>
     */
    public com.leftbin.commons.proto.v1.kafka.TopicPartition.Builder addTopicPartitionsBuilder() {
      return getTopicPartitionsFieldBuilder().addBuilder(
          com.leftbin.commons.proto.v1.kafka.TopicPartition.getDefaultInstance());
    }
    /**
     * <code>repeated .leftbin.commons.proto.v1.kafka.TopicPartition topic_partitions = 3 [json_name = "topicPartitions"];</code>
     */
    public com.leftbin.commons.proto.v1.kafka.TopicPartition.Builder addTopicPartitionsBuilder(
        int index) {
      return getTopicPartitionsFieldBuilder().addBuilder(
          index, com.leftbin.commons.proto.v1.kafka.TopicPartition.getDefaultInstance());
    }
    /**
     * <code>repeated .leftbin.commons.proto.v1.kafka.TopicPartition topic_partitions = 3 [json_name = "topicPartitions"];</code>
     */
    public java.util.List<com.leftbin.commons.proto.v1.kafka.TopicPartition.Builder> 
         getTopicPartitionsBuilderList() {
      return getTopicPartitionsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.leftbin.commons.proto.v1.kafka.TopicPartition, com.leftbin.commons.proto.v1.kafka.TopicPartition.Builder, com.leftbin.commons.proto.v1.kafka.TopicPartitionOrBuilder> 
        getTopicPartitionsFieldBuilder() {
      if (topicPartitionsBuilder_ == null) {
        topicPartitionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.leftbin.commons.proto.v1.kafka.TopicPartition, com.leftbin.commons.proto.v1.kafka.TopicPartition.Builder, com.leftbin.commons.proto.v1.kafka.TopicPartitionOrBuilder>(
                topicPartitions_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        topicPartitions_ = null;
      }
      return topicPartitionsBuilder_;
    }

    private com.google.protobuf.LazyStringArrayList standbyStateStoreNames_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    private void ensureStandbyStateStoreNamesIsMutable() {
      if (!standbyStateStoreNames_.isModifiable()) {
        standbyStateStoreNames_ = new com.google.protobuf.LazyStringArrayList(standbyStateStoreNames_);
      }
      bitField0_ |= 0x00000008;
    }
    /**
     * <code>repeated string standby_state_store_names = 4 [json_name = "standbyStateStoreNames"];</code>
     * @return A list containing the standbyStateStoreNames.
     */
    public com.google.protobuf.ProtocolStringList
        getStandbyStateStoreNamesList() {
      standbyStateStoreNames_.makeImmutable();
      return standbyStateStoreNames_;
    }
    /**
     * <code>repeated string standby_state_store_names = 4 [json_name = "standbyStateStoreNames"];</code>
     * @return The count of standbyStateStoreNames.
     */
    public int getStandbyStateStoreNamesCount() {
      return standbyStateStoreNames_.size();
    }
    /**
     * <code>repeated string standby_state_store_names = 4 [json_name = "standbyStateStoreNames"];</code>
     * @param index The index of the element to return.
     * @return The standbyStateStoreNames at the given index.
     */
    public java.lang.String getStandbyStateStoreNames(int index) {
      return standbyStateStoreNames_.get(index);
    }
    /**
     * <code>repeated string standby_state_store_names = 4 [json_name = "standbyStateStoreNames"];</code>
     * @param index The index of the value to return.
     * @return The bytes of the standbyStateStoreNames at the given index.
     */
    public com.google.protobuf.ByteString
        getStandbyStateStoreNamesBytes(int index) {
      return standbyStateStoreNames_.getByteString(index);
    }
    /**
     * <code>repeated string standby_state_store_names = 4 [json_name = "standbyStateStoreNames"];</code>
     * @param index The index to set the value at.
     * @param value The standbyStateStoreNames to set.
     * @return This builder for chaining.
     */
    public Builder setStandbyStateStoreNames(
        int index, java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureStandbyStateStoreNamesIsMutable();
      standbyStateStoreNames_.set(index, value);
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <code>repeated string standby_state_store_names = 4 [json_name = "standbyStateStoreNames"];</code>
     * @param value The standbyStateStoreNames to add.
     * @return This builder for chaining.
     */
    public Builder addStandbyStateStoreNames(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureStandbyStateStoreNamesIsMutable();
      standbyStateStoreNames_.add(value);
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <code>repeated string standby_state_store_names = 4 [json_name = "standbyStateStoreNames"];</code>
     * @param values The standbyStateStoreNames to add.
     * @return This builder for chaining.
     */
    public Builder addAllStandbyStateStoreNames(
        java.lang.Iterable<java.lang.String> values) {
      ensureStandbyStateStoreNamesIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, standbyStateStoreNames_);
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <code>repeated string standby_state_store_names = 4 [json_name = "standbyStateStoreNames"];</code>
     * @return This builder for chaining.
     */
    public Builder clearStandbyStateStoreNames() {
      standbyStateStoreNames_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
      bitField0_ = (bitField0_ & ~0x00000008);;
      onChanged();
      return this;
    }
    /**
     * <code>repeated string standby_state_store_names = 4 [json_name = "standbyStateStoreNames"];</code>
     * @param value The bytes of the standbyStateStoreNames to add.
     * @return This builder for chaining.
     */
    public Builder addStandbyStateStoreNamesBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      ensureStandbyStateStoreNamesIsMutable();
      standbyStateStoreNames_.add(value);
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    private java.util.List<com.leftbin.commons.proto.v1.kafka.TopicPartition> standbyTopicPartitions_ =
      java.util.Collections.emptyList();
    private void ensureStandbyTopicPartitionsIsMutable() {
      if (!((bitField0_ & 0x00000010) != 0)) {
        standbyTopicPartitions_ = new java.util.ArrayList<com.leftbin.commons.proto.v1.kafka.TopicPartition>(standbyTopicPartitions_);
        bitField0_ |= 0x00000010;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.leftbin.commons.proto.v1.kafka.TopicPartition, com.leftbin.commons.proto.v1.kafka.TopicPartition.Builder, com.leftbin.commons.proto.v1.kafka.TopicPartitionOrBuilder> standbyTopicPartitionsBuilder_;

    /**
     * <code>repeated .leftbin.commons.proto.v1.kafka.TopicPartition standby_topic_partitions = 5 [json_name = "standbyTopicPartitions"];</code>
     */
    public java.util.List<com.leftbin.commons.proto.v1.kafka.TopicPartition> getStandbyTopicPartitionsList() {
      if (standbyTopicPartitionsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(standbyTopicPartitions_);
      } else {
        return standbyTopicPartitionsBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .leftbin.commons.proto.v1.kafka.TopicPartition standby_topic_partitions = 5 [json_name = "standbyTopicPartitions"];</code>
     */
    public int getStandbyTopicPartitionsCount() {
      if (standbyTopicPartitionsBuilder_ == null) {
        return standbyTopicPartitions_.size();
      } else {
        return standbyTopicPartitionsBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .leftbin.commons.proto.v1.kafka.TopicPartition standby_topic_partitions = 5 [json_name = "standbyTopicPartitions"];</code>
     */
    public com.leftbin.commons.proto.v1.kafka.TopicPartition getStandbyTopicPartitions(int index) {
      if (standbyTopicPartitionsBuilder_ == null) {
        return standbyTopicPartitions_.get(index);
      } else {
        return standbyTopicPartitionsBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .leftbin.commons.proto.v1.kafka.TopicPartition standby_topic_partitions = 5 [json_name = "standbyTopicPartitions"];</code>
     */
    public Builder setStandbyTopicPartitions(
        int index, com.leftbin.commons.proto.v1.kafka.TopicPartition value) {
      if (standbyTopicPartitionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureStandbyTopicPartitionsIsMutable();
        standbyTopicPartitions_.set(index, value);
        onChanged();
      } else {
        standbyTopicPartitionsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .leftbin.commons.proto.v1.kafka.TopicPartition standby_topic_partitions = 5 [json_name = "standbyTopicPartitions"];</code>
     */
    public Builder setStandbyTopicPartitions(
        int index, com.leftbin.commons.proto.v1.kafka.TopicPartition.Builder builderForValue) {
      if (standbyTopicPartitionsBuilder_ == null) {
        ensureStandbyTopicPartitionsIsMutable();
        standbyTopicPartitions_.set(index, builderForValue.build());
        onChanged();
      } else {
        standbyTopicPartitionsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .leftbin.commons.proto.v1.kafka.TopicPartition standby_topic_partitions = 5 [json_name = "standbyTopicPartitions"];</code>
     */
    public Builder addStandbyTopicPartitions(com.leftbin.commons.proto.v1.kafka.TopicPartition value) {
      if (standbyTopicPartitionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureStandbyTopicPartitionsIsMutable();
        standbyTopicPartitions_.add(value);
        onChanged();
      } else {
        standbyTopicPartitionsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .leftbin.commons.proto.v1.kafka.TopicPartition standby_topic_partitions = 5 [json_name = "standbyTopicPartitions"];</code>
     */
    public Builder addStandbyTopicPartitions(
        int index, com.leftbin.commons.proto.v1.kafka.TopicPartition value) {
      if (standbyTopicPartitionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureStandbyTopicPartitionsIsMutable();
        standbyTopicPartitions_.add(index, value);
        onChanged();
      } else {
        standbyTopicPartitionsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .leftbin.commons.proto.v1.kafka.TopicPartition standby_topic_partitions = 5 [json_name = "standbyTopicPartitions"];</code>
     */
    public Builder addStandbyTopicPartitions(
        com.leftbin.commons.proto.v1.kafka.TopicPartition.Builder builderForValue) {
      if (standbyTopicPartitionsBuilder_ == null) {
        ensureStandbyTopicPartitionsIsMutable();
        standbyTopicPartitions_.add(builderForValue.build());
        onChanged();
      } else {
        standbyTopicPartitionsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .leftbin.commons.proto.v1.kafka.TopicPartition standby_topic_partitions = 5 [json_name = "standbyTopicPartitions"];</code>
     */
    public Builder addStandbyTopicPartitions(
        int index, com.leftbin.commons.proto.v1.kafka.TopicPartition.Builder builderForValue) {
      if (standbyTopicPartitionsBuilder_ == null) {
        ensureStandbyTopicPartitionsIsMutable();
        standbyTopicPartitions_.add(index, builderForValue.build());
        onChanged();
      } else {
        standbyTopicPartitionsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .leftbin.commons.proto.v1.kafka.TopicPartition standby_topic_partitions = 5 [json_name = "standbyTopicPartitions"];</code>
     */
    public Builder addAllStandbyTopicPartitions(
        java.lang.Iterable<? extends com.leftbin.commons.proto.v1.kafka.TopicPartition> values) {
      if (standbyTopicPartitionsBuilder_ == null) {
        ensureStandbyTopicPartitionsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, standbyTopicPartitions_);
        onChanged();
      } else {
        standbyTopicPartitionsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .leftbin.commons.proto.v1.kafka.TopicPartition standby_topic_partitions = 5 [json_name = "standbyTopicPartitions"];</code>
     */
    public Builder clearStandbyTopicPartitions() {
      if (standbyTopicPartitionsBuilder_ == null) {
        standbyTopicPartitions_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
      } else {
        standbyTopicPartitionsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .leftbin.commons.proto.v1.kafka.TopicPartition standby_topic_partitions = 5 [json_name = "standbyTopicPartitions"];</code>
     */
    public Builder removeStandbyTopicPartitions(int index) {
      if (standbyTopicPartitionsBuilder_ == null) {
        ensureStandbyTopicPartitionsIsMutable();
        standbyTopicPartitions_.remove(index);
        onChanged();
      } else {
        standbyTopicPartitionsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .leftbin.commons.proto.v1.kafka.TopicPartition standby_topic_partitions = 5 [json_name = "standbyTopicPartitions"];</code>
     */
    public com.leftbin.commons.proto.v1.kafka.TopicPartition.Builder getStandbyTopicPartitionsBuilder(
        int index) {
      return getStandbyTopicPartitionsFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .leftbin.commons.proto.v1.kafka.TopicPartition standby_topic_partitions = 5 [json_name = "standbyTopicPartitions"];</code>
     */
    public com.leftbin.commons.proto.v1.kafka.TopicPartitionOrBuilder getStandbyTopicPartitionsOrBuilder(
        int index) {
      if (standbyTopicPartitionsBuilder_ == null) {
        return standbyTopicPartitions_.get(index);  } else {
        return standbyTopicPartitionsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .leftbin.commons.proto.v1.kafka.TopicPartition standby_topic_partitions = 5 [json_name = "standbyTopicPartitions"];</code>
     */
    public java.util.List<? extends com.leftbin.commons.proto.v1.kafka.TopicPartitionOrBuilder> 
         getStandbyTopicPartitionsOrBuilderList() {
      if (standbyTopicPartitionsBuilder_ != null) {
        return standbyTopicPartitionsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(standbyTopicPartitions_);
      }
    }
    /**
     * <code>repeated .leftbin.commons.proto.v1.kafka.TopicPartition standby_topic_partitions = 5 [json_name = "standbyTopicPartitions"];</code>
     */
    public com.leftbin.commons.proto.v1.kafka.TopicPartition.Builder addStandbyTopicPartitionsBuilder() {
      return getStandbyTopicPartitionsFieldBuilder().addBuilder(
          com.leftbin.commons.proto.v1.kafka.TopicPartition.getDefaultInstance());
    }
    /**
     * <code>repeated .leftbin.commons.proto.v1.kafka.TopicPartition standby_topic_partitions = 5 [json_name = "standbyTopicPartitions"];</code>
     */
    public com.leftbin.commons.proto.v1.kafka.TopicPartition.Builder addStandbyTopicPartitionsBuilder(
        int index) {
      return getStandbyTopicPartitionsFieldBuilder().addBuilder(
          index, com.leftbin.commons.proto.v1.kafka.TopicPartition.getDefaultInstance());
    }
    /**
     * <code>repeated .leftbin.commons.proto.v1.kafka.TopicPartition standby_topic_partitions = 5 [json_name = "standbyTopicPartitions"];</code>
     */
    public java.util.List<com.leftbin.commons.proto.v1.kafka.TopicPartition.Builder> 
         getStandbyTopicPartitionsBuilderList() {
      return getStandbyTopicPartitionsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.leftbin.commons.proto.v1.kafka.TopicPartition, com.leftbin.commons.proto.v1.kafka.TopicPartition.Builder, com.leftbin.commons.proto.v1.kafka.TopicPartitionOrBuilder> 
        getStandbyTopicPartitionsFieldBuilder() {
      if (standbyTopicPartitionsBuilder_ == null) {
        standbyTopicPartitionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.leftbin.commons.proto.v1.kafka.TopicPartition, com.leftbin.commons.proto.v1.kafka.TopicPartition.Builder, com.leftbin.commons.proto.v1.kafka.TopicPartitionOrBuilder>(
                standbyTopicPartitions_,
                ((bitField0_ & 0x00000010) != 0),
                getParentForChildren(),
                isClean());
        standbyTopicPartitions_ = null;
      }
      return standbyTopicPartitionsBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:leftbin.commons.proto.v1.kafka.InstanceMeta)
  }

  // @@protoc_insertion_point(class_scope:leftbin.commons.proto.v1.kafka.InstanceMeta)
  private static final com.leftbin.commons.proto.v1.kafka.InstanceMeta DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.leftbin.commons.proto.v1.kafka.InstanceMeta();
  }

  public static com.leftbin.commons.proto.v1.kafka.InstanceMeta getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<InstanceMeta>
      PARSER = new com.google.protobuf.AbstractParser<InstanceMeta>() {
    @java.lang.Override
    public InstanceMeta parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<InstanceMeta> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<InstanceMeta> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.leftbin.commons.proto.v1.kafka.InstanceMeta getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

